{
	"id": "76ce37d55d94a52af2a1dd317e6d283b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DutchAuction.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract DutchAuction is Ownable {\r\n\r\n    uint constant START_PRICE = 10 ether; // 起拍价\r\n    uint constant END_PRICE = 1 ether; // 最低价\r\n    uint constant DURATION = 90 seconds; // 拍卖持续时间\r\n    uint constant INTERNAL = 10 seconds; // 降价间隔时间。每隔一段时间，价格降低一次\r\n    uint constant DEC_PER_STEP = (START_PRICE - END_PRICE) / DURATION * INTERNAL; // 每次的降价幅度\r\n\r\n    uint public startTime; // 拍卖开始时间\r\n    uint public highestBid; // 当前最高出价\r\n    address public winner; // 竞标胜出者\r\n    \r\n\r\n    // 拍卖开始事件\r\n    event AuctionStarted(uint startPrice, uint startTime);\r\n    // 拍卖结束事件\r\n    event AuctionEnded(address winner, uint winningBid);\r\n\r\n    // 构造函数，设置合约拥有者\r\n    constructor() Ownable(msg.sender) {\r\n    }\r\n\r\n    // 开始拍卖，仅合约拥有者可调用\r\n    function startAuction() public onlyOwner {\r\n        // 记录拍卖开始时间为当前时间戳\r\n        startTime = block.timestamp;\r\n        // 将胜出者地址清零\r\n        winner = address(0);\r\n        // 将当前最高出价清零\r\n        highestBid = 0;\r\n        // 触发拍卖开始事件\r\n        emit AuctionStarted(START_PRICE, startTime); \r\n    }\r\n    // 竞拍出价\r\n    function bid() public payable {\r\n        // 确保拍卖已经开始\r\n        require(startTime > 0, \"auction not yet started\"); \r\n        // 确保拍卖还未结束\r\n        require(winner == address(0), \"auction is over\");\r\n\r\n        // 计算当前拍卖价格\r\n        uint currentPrice = START_PRICE - ((block.timestamp - startTime)/INTERNAL * DEC_PER_STEP);\r\n         if (currentPrice < END_PRICE) {\r\n            currentPrice = END_PRICE;\r\n        }\r\n\r\n        // 出价必须高于当前拍卖价格\r\n        require(msg.value >= currentPrice, \r\n            \"bid must be not less than the current price\");\r\n\r\n        // 更新胜出者为当前出价者\r\n        winner = msg.sender; \r\n        // 更新最高出价为当前出价\r\n        highestBid = msg.value;\r\n        // 触发竞拍事件\r\n        emit AuctionEnded(msg.sender, msg.value);\r\n\r\n        //这里可以加入对竞拍成功者的任意操作\r\n        //..... \r\n    }\r\n\r\n        // 提取合约中的资金。仅合约拥有者可调用\r\n    function claim() public onlyOwner {\r\n        // 提取合约余额资金给合约拥有者\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n    // 查看当前最低投标额\r\n    function getPrice() public view returns(uint) {\r\n        // 确保拍卖已经开始\r\n        require(startTime > 0, \"auction not yet started\"); \r\n        // 确保拍卖还未结束\r\n        require(winner == address(0), \"auction is over\");\r\n\r\n        // 计算当前拍卖价格\r\n        uint currentPrice = START_PRICE - ((block.timestamp - startTime)/INTERNAL * DEC_PER_STEP);\r\n        if (currentPrice < END_PRICE) {\r\n            currentPrice = END_PRICE;\r\n        }\r\n        // 返回当期投标需要的金额\r\n        return currentPrice;\r\n    }\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DutchAuction.sol": {
				"DutchAuction": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "winner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "winningBid",
									"type": "uint256"
								}
							],
							"name": "AuctionEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"name": "AuctionStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "bid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highestBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAuction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DutchAuction.sol\":117:3194  contract DutchAuction is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DutchAuction.sol\":923:965  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/DutchAuction.sol\":945:955  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/DutchAuction.sol\":117:3194  contract DutchAuction is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/DutchAuction.sol\":117:3194  contract DutchAuction is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DutchAuction.sol\":117:3194  contract DutchAuction is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd57bde79\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdfbf53ae\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x1998aeef\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6b64c769\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/DutchAuction.sol\":1417:2360  function bid() public payable {... */\n    tag_2:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/DutchAuction.sol\":2435:2591  function claim() public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/DutchAuction.sol\":1024:1390  function startAuction() public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/DutchAuction.sol\":548:569  uint public startTime */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DutchAuction.sol\":2633:3187  function getPrice() public view returns(uint) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DutchAuction.sol\":598:620  uint public highestBid */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DutchAuction.sol\":649:670  address public winner */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      revert(0x00, 0x00)\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/DutchAuction.sol\":1417:2360  function bid() public payable {... */\n    tag_14:\n        /* \"contracts/DutchAuction.sol\":1515:1516  0 */\n      0x00\n        /* \"contracts/DutchAuction.sol\":1503:1512  startTime */\n      sload(0x01)\n        /* \"contracts/DutchAuction.sol\":1503:1516  startTime > 0 */\n      gt\n        /* \"contracts/DutchAuction.sol\":1495:1544  require(startTime > 0, \"auction not yet started\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"contracts/DutchAuction.sol\":1619:1620  0 */\n      0x00\n        /* \"contracts/DutchAuction.sol\":1601:1621  winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DutchAuction.sol\":1601:1607  winner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DutchAuction.sol\":1601:1621  winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DutchAuction.sol\":1593:1641  require(winner == address(0), \"auction is over\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"contracts/DutchAuction.sol\":1691:1708  uint currentPrice */\n      0x00\n        /* \"contracts/DutchAuction.sol\":357:367  10 seconds */\n      0x0a\n        /* \"contracts/DutchAuction.sol\":293:303  90 seconds */\n      0x5a\n        /* \"contracts/DutchAuction.sol\":241:248  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/DutchAuction.sol\":187:195  10 ether */\n      0x8ac7230489e80000\n        /* \"contracts/DutchAuction.sol\":468:491  START_PRICE - END_PRICE */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/DutchAuction.sol\":467:503  (START_PRICE - END_PRICE) / DURATION */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"contracts/DutchAuction.sol\":467:514  (START_PRICE - END_PRICE) / DURATION * INTERNAL */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/DutchAuction.sol\":357:367  10 seconds */\n      0x0a\n        /* \"contracts/DutchAuction.sol\":1745:1754  startTime */\n      sload(0x01)\n        /* \"contracts/DutchAuction.sol\":1727:1742  block.timestamp */\n      timestamp\n        /* \"contracts/DutchAuction.sol\":1727:1754  block.timestamp - startTime */\n      tag_64\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_64:\n        /* \"contracts/DutchAuction.sol\":1726:1764  (block.timestamp - startTime)/INTERNAL */\n      tag_65\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_65:\n        /* \"contracts/DutchAuction.sol\":1726:1779  (block.timestamp - startTime)/INTERNAL * DEC_PER_STEP */\n      tag_66\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_66:\n        /* \"contracts/DutchAuction.sol\":187:195  10 ether */\n      0x8ac7230489e80000\n        /* \"contracts/DutchAuction.sol\":1711:1780  START_PRICE - ((block.timestamp - startTime)/INTERNAL * DEC_PER_STEP) */\n      tag_67\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_67:\n        /* \"contracts/DutchAuction.sol\":1691:1780  uint currentPrice = START_PRICE - ((block.timestamp - startTime)/INTERNAL * DEC_PER_STEP) */\n      swap1\n      pop\n        /* \"contracts/DutchAuction.sol\":241:248  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/DutchAuction.sol\":1796:1808  currentPrice */\n      dup2\n        /* \"contracts/DutchAuction.sol\":1796:1820  currentPrice < END_PRICE */\n      lt\n        /* \"contracts/DutchAuction.sol\":1792:1873  if (currentPrice < END_PRICE) {... */\n      iszero\n      tag_68\n      jumpi\n        /* \"contracts/DutchAuction.sol\":241:248  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/DutchAuction.sol\":1837:1861  currentPrice = END_PRICE */\n      swap1\n      pop\n        /* \"contracts/DutchAuction.sol\":1792:1873  if (currentPrice < END_PRICE) {... */\n    tag_68:\n        /* \"contracts/DutchAuction.sol\":1955:1967  currentPrice */\n      dup1\n        /* \"contracts/DutchAuction.sol\":1942:1951  msg.value */\n      callvalue\n        /* \"contracts/DutchAuction.sol\":1942:1967  msg.value >= currentPrice */\n      lt\n      iszero\n        /* \"contracts/DutchAuction.sol\":1934:2029  require(msg.value >= currentPrice, ... */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/DutchAuction.sol\":2097:2107  msg.sender */\n      caller\n        /* \"contracts/DutchAuction.sol\":2088:2094  winner */\n      0x03\n      0x00\n        /* \"contracts/DutchAuction.sol\":2088:2107  winner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DutchAuction.sol\":2178:2187  msg.value */\n      callvalue\n        /* \"contracts/DutchAuction.sol\":2165:2175  highestBid */\n      0x02\n        /* \"contracts/DutchAuction.sol\":2165:2187  highestBid = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DutchAuction.sol\":2234:2269  AuctionEnded(msg.sender, msg.value) */\n      0xdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda\n        /* \"contracts/DutchAuction.sol\":2247:2257  msg.sender */\n      caller\n        /* \"contracts/DutchAuction.sol\":2259:2268  msg.value */\n      callvalue\n        /* \"contracts/DutchAuction.sol\":2234:2269  AuctionEnded(msg.sender, msg.value) */\n      mload(0x40)\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DutchAuction.sol\":1447:2360  {... */\n      pop\n        /* \"contracts/DutchAuction.sol\":1417:2360  function bid() public payable {... */\n      jump\t// out\n        /* \"contracts/DutchAuction.sol\":2435:2591  function claim() public onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"contracts/DutchAuction.sol\":2543:2550  owner() */\n      tag_78\n        /* \"contracts/DutchAuction.sol\":2543:2548  owner */\n      tag_31\n        /* \"contracts/DutchAuction.sol\":2543:2550  owner() */\n      jump\t// in\n    tag_78:\n        /* \"contracts/DutchAuction.sol\":2535:2560  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DutchAuction.sol\":2535:2583  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/DutchAuction.sol\":2561:2582  address(this).balance */\n      selfbalance\n        /* \"contracts/DutchAuction.sol\":2535:2583  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n        /* \"contracts/DutchAuction.sol\":2435:2591  function claim() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DutchAuction.sol\":1024:1390  function startAuction() public onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"contracts/DutchAuction.sol\":1143:1158  block.timestamp */\n      timestamp\n        /* \"contracts/DutchAuction.sol\":1131:1140  startTime */\n      0x01\n        /* \"contracts/DutchAuction.sol\":1131:1158  startTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DutchAuction.sol\":1223:1224  0 */\n      0x00\n        /* \"contracts/DutchAuction.sol\":1206:1212  winner */\n      0x03\n      0x00\n        /* \"contracts/DutchAuction.sol\":1206:1225  winner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/DutchAuction.sol\":1289:1290  0 */\n      0x00\n        /* \"contracts/DutchAuction.sol\":1276:1286  highestBid */\n      0x02\n        /* \"contracts/DutchAuction.sol\":1276:1290  highestBid = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DutchAuction.sol\":1343:1381  AuctionStarted(START_PRICE, startTime) */\n      0xf8910119ddbef5440c54532457dfe8250a10ed39e583292818f44724b9e1344c\n        /* \"contracts/DutchAuction.sol\":187:195  10 ether */\n      0x8ac7230489e80000\n        /* \"contracts/DutchAuction.sol\":1371:1380  startTime */\n      sload(0x01)\n        /* \"contracts/DutchAuction.sol\":1343:1381  AuctionStarted(START_PRICE, startTime) */\n      mload(0x40)\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DutchAuction.sol\":1024:1390  function startAuction() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DutchAuction.sol\":548:569  uint public startTime */\n    tag_26:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DutchAuction.sol\":2633:3187  function getPrice() public view returns(uint) {... */\n    tag_36:\n        /* \"contracts/DutchAuction.sol\":2673:2677  uint */\n      0x00\n        /* \"contracts/DutchAuction.sol\":2747:2748  0 */\n      0x00\n        /* \"contracts/DutchAuction.sol\":2735:2744  startTime */\n      sload(0x01)\n        /* \"contracts/DutchAuction.sol\":2735:2748  startTime > 0 */\n      gt\n        /* \"contracts/DutchAuction.sol\":2727:2776  require(startTime > 0, \"auction not yet started\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_54\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/DutchAuction.sol\":2851:2852  0 */\n      0x00\n        /* \"contracts/DutchAuction.sol\":2833:2853  winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DutchAuction.sol\":2833:2839  winner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/DutchAuction.sol\":2833:2853  winner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/DutchAuction.sol\":2825:2873  require(winner == address(0), \"auction is over\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_57\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/DutchAuction.sol\":2923:2940  uint currentPrice */\n      0x00\n        /* \"contracts/DutchAuction.sol\":357:367  10 seconds */\n      0x0a\n        /* \"contracts/DutchAuction.sol\":293:303  90 seconds */\n      0x5a\n        /* \"contracts/DutchAuction.sol\":241:248  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/DutchAuction.sol\":187:195  10 ether */\n      0x8ac7230489e80000\n        /* \"contracts/DutchAuction.sol\":468:491  START_PRICE - END_PRICE */\n      tag_97\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_97:\n        /* \"contracts/DutchAuction.sol\":467:503  (START_PRICE - END_PRICE) / DURATION */\n      tag_98\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_98:\n        /* \"contracts/DutchAuction.sol\":467:514  (START_PRICE - END_PRICE) / DURATION * INTERNAL */\n      tag_99\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_99:\n        /* \"contracts/DutchAuction.sol\":357:367  10 seconds */\n      0x0a\n        /* \"contracts/DutchAuction.sol\":2977:2986  startTime */\n      sload(0x01)\n        /* \"contracts/DutchAuction.sol\":2959:2974  block.timestamp */\n      timestamp\n        /* \"contracts/DutchAuction.sol\":2959:2986  block.timestamp - startTime */\n      tag_100\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_100:\n        /* \"contracts/DutchAuction.sol\":2958:2996  (block.timestamp - startTime)/INTERNAL */\n      tag_101\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_101:\n        /* \"contracts/DutchAuction.sol\":2958:3011  (block.timestamp - startTime)/INTERNAL * DEC_PER_STEP */\n      tag_102\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_102:\n        /* \"contracts/DutchAuction.sol\":187:195  10 ether */\n      0x8ac7230489e80000\n        /* \"contracts/DutchAuction.sol\":2943:3012  START_PRICE - ((block.timestamp - startTime)/INTERNAL * DEC_PER_STEP) */\n      tag_103\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_103:\n        /* \"contracts/DutchAuction.sol\":2923:3012  uint currentPrice = START_PRICE - ((block.timestamp - startTime)/INTERNAL * DEC_PER_STEP) */\n      swap1\n      pop\n        /* \"contracts/DutchAuction.sol\":241:248  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/DutchAuction.sol\":3027:3039  currentPrice */\n      dup2\n        /* \"contracts/DutchAuction.sol\":3027:3051  currentPrice < END_PRICE */\n      lt\n        /* \"contracts/DutchAuction.sol\":3023:3104  if (currentPrice < END_PRICE) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"contracts/DutchAuction.sol\":241:248  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/DutchAuction.sol\":3068:3092  currentPrice = END_PRICE */\n      swap1\n      pop\n        /* \"contracts/DutchAuction.sol\":3023:3104  if (currentPrice < END_PRICE) {... */\n    tag_104:\n        /* \"contracts/DutchAuction.sol\":3167:3179  currentPrice */\n      dup1\n        /* \"contracts/DutchAuction.sol\":3160:3179  return currentPrice */\n      swap2\n      pop\n      pop\n        /* \"contracts/DutchAuction.sol\":2633:3187  function getPrice() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/DutchAuction.sol\":598:620  uint public highestBid */\n    tag_40:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/DutchAuction.sol\":649:670  address public winner */\n    tag_44:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_31\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_120:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_121:\n        /* \"#utility.yul\":177:201   */\n      tag_142\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_120\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_28:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_144\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_121\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_122:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_123:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_147\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_122\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_124:\n        /* \"#utility.yul\":763:787   */\n      tag_149\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_123\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_33:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_151\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_124\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_126:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_128:\n        /* \"#utility.yul\":1428:1452   */\n      tag_156\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_123\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_157:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_129:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_159\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_128\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1957   */\n    tag_49:\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1736:1738   */\n      0x20\n        /* \"#utility.yul\":1724:1733   */\n      dup3\n        /* \"#utility.yul\":1715:1722   */\n      dup5\n        /* \"#utility.yul\":1711:1734   */\n      sub\n        /* \"#utility.yul\":1707:1739   */\n      slt\n        /* \"#utility.yul\":1704:1823   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":1742:1821   */\n      tag_162\n      tag_126\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1704:1823   */\n    tag_161:\n        /* \"#utility.yul\":1862:1863   */\n      0x00\n        /* \"#utility.yul\":1887:1940   */\n      tag_163\n        /* \"#utility.yul\":1932:1939   */\n      dup5\n        /* \"#utility.yul\":1923:1929   */\n      dup3\n        /* \"#utility.yul\":1912:1921   */\n      dup6\n        /* \"#utility.yul\":1908:1930   */\n      add\n        /* \"#utility.yul\":1887:1940   */\n      tag_129\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1877:1940   */\n      swap2\n      pop\n        /* \"#utility.yul\":1833:1950   */\n      pop\n        /* \"#utility.yul\":1628:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2132   */\n    tag_130:\n        /* \"#utility.yul\":2047:2058   */\n      0x00\n        /* \"#utility.yul\":2081:2087   */\n      dup3\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2088   */\n      mstore\n        /* \"#utility.yul\":2121:2125   */\n      0x20\n        /* \"#utility.yul\":2116:2119   */\n      dup3\n        /* \"#utility.yul\":2112:2126   */\n      add\n        /* \"#utility.yul\":2097:2126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2138:2311   */\n    tag_131:\n        /* \"#utility.yul\":2278:2303   */\n      0x61756374696f6e206e6f74207965742073746172746564000000000000000000\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2266:2272   */\n      dup3\n        /* \"#utility.yul\":2262:2276   */\n      add\n        /* \"#utility.yul\":2255:2304   */\n      mstore\n        /* \"#utility.yul\":2138:2311   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2317:2683   */\n    tag_132:\n        /* \"#utility.yul\":2459:2462   */\n      0x00\n        /* \"#utility.yul\":2480:2547   */\n      tag_167\n        /* \"#utility.yul\":2544:2546   */\n      0x17\n        /* \"#utility.yul\":2539:2542   */\n      dup4\n        /* \"#utility.yul\":2480:2547   */\n      tag_130\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2473:2547   */\n      swap2\n      pop\n        /* \"#utility.yul\":2556:2649   */\n      tag_168\n        /* \"#utility.yul\":2645:2648   */\n      dup3\n        /* \"#utility.yul\":2556:2649   */\n      tag_131\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2674:2676   */\n      0x20\n        /* \"#utility.yul\":2669:2672   */\n      dup3\n        /* \"#utility.yul\":2665:2677   */\n      add\n        /* \"#utility.yul\":2658:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2317:2683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2689:3108   */\n    tag_54:\n        /* \"#utility.yul\":2855:2859   */\n      0x00\n        /* \"#utility.yul\":2893:2895   */\n      0x20\n        /* \"#utility.yul\":2882:2891   */\n      dup3\n        /* \"#utility.yul\":2878:2896   */\n      add\n        /* \"#utility.yul\":2870:2896   */\n      swap1\n      pop\n        /* \"#utility.yul\":2942:2951   */\n      dup2\n        /* \"#utility.yul\":2936:2940   */\n      dup2\n        /* \"#utility.yul\":2932:2952   */\n      sub\n        /* \"#utility.yul\":2928:2929   */\n      0x00\n        /* \"#utility.yul\":2917:2926   */\n      dup4\n        /* \"#utility.yul\":2913:2930   */\n      add\n        /* \"#utility.yul\":2906:2953   */\n      mstore\n        /* \"#utility.yul\":2970:3101   */\n      tag_170\n        /* \"#utility.yul\":3096:3100   */\n      dup2\n        /* \"#utility.yul\":2970:3101   */\n      tag_132\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2962:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":2689:3108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3114:3279   */\n    tag_133:\n        /* \"#utility.yul\":3254:3271   */\n      0x61756374696f6e206973206f7665720000000000000000000000000000000000\n        /* \"#utility.yul\":3250:3251   */\n      0x00\n        /* \"#utility.yul\":3242:3248   */\n      dup3\n        /* \"#utility.yul\":3238:3252   */\n      add\n        /* \"#utility.yul\":3231:3272   */\n      mstore\n        /* \"#utility.yul\":3114:3279   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3285:3651   */\n    tag_134:\n        /* \"#utility.yul\":3427:3430   */\n      0x00\n        /* \"#utility.yul\":3448:3515   */\n      tag_173\n        /* \"#utility.yul\":3512:3514   */\n      0x0f\n        /* \"#utility.yul\":3507:3510   */\n      dup4\n        /* \"#utility.yul\":3448:3515   */\n      tag_130\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3441:3515   */\n      swap2\n      pop\n        /* \"#utility.yul\":3524:3617   */\n      tag_174\n        /* \"#utility.yul\":3613:3616   */\n      dup3\n        /* \"#utility.yul\":3524:3617   */\n      tag_133\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3642:3644   */\n      0x20\n        /* \"#utility.yul\":3637:3640   */\n      dup3\n        /* \"#utility.yul\":3633:3645   */\n      add\n        /* \"#utility.yul\":3626:3645   */\n      swap1\n      pop\n        /* \"#utility.yul\":3285:3651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3657:4076   */\n    tag_57:\n        /* \"#utility.yul\":3823:3827   */\n      0x00\n        /* \"#utility.yul\":3861:3863   */\n      0x20\n        /* \"#utility.yul\":3850:3859   */\n      dup3\n        /* \"#utility.yul\":3846:3864   */\n      add\n        /* \"#utility.yul\":3838:3864   */\n      swap1\n      pop\n        /* \"#utility.yul\":3910:3919   */\n      dup2\n        /* \"#utility.yul\":3904:3908   */\n      dup2\n        /* \"#utility.yul\":3900:3920   */\n      sub\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3885:3894   */\n      dup4\n        /* \"#utility.yul\":3881:3898   */\n      add\n        /* \"#utility.yul\":3874:3921   */\n      mstore\n        /* \"#utility.yul\":3938:4069   */\n      tag_176\n        /* \"#utility.yul\":4064:4068   */\n      dup2\n        /* \"#utility.yul\":3938:4069   */\n      tag_134\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3930:4069   */\n      swap1\n      pop\n        /* \"#utility.yul\":3657:4076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4082:4262   */\n    tag_135:\n        /* \"#utility.yul\":4130:4207   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4127:4128   */\n      0x00\n        /* \"#utility.yul\":4120:4208   */\n      mstore\n        /* \"#utility.yul\":4227:4231   */\n      0x11\n        /* \"#utility.yul\":4224:4225   */\n      0x04\n        /* \"#utility.yul\":4217:4232   */\n      mstore\n        /* \"#utility.yul\":4251:4255   */\n      0x24\n        /* \"#utility.yul\":4248:4249   */\n      0x00\n        /* \"#utility.yul\":4241:4256   */\n      revert\n        /* \"#utility.yul\":4268:4462   */\n    tag_59:\n        /* \"#utility.yul\":4308:4312   */\n      0x00\n        /* \"#utility.yul\":4328:4348   */\n      tag_179\n        /* \"#utility.yul\":4346:4347   */\n      dup3\n        /* \"#utility.yul\":4328:4348   */\n      tag_120\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4323:4348   */\n      swap2\n      pop\n        /* \"#utility.yul\":4362:4382   */\n      tag_180\n        /* \"#utility.yul\":4380:4381   */\n      dup4\n        /* \"#utility.yul\":4362:4382   */\n      tag_120\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4357:4382   */\n      swap3\n      pop\n        /* \"#utility.yul\":4406:4407   */\n      dup3\n        /* \"#utility.yul\":4403:4404   */\n      dup3\n        /* \"#utility.yul\":4399:4408   */\n      sub\n        /* \"#utility.yul\":4391:4408   */\n      swap1\n      pop\n        /* \"#utility.yul\":4430:4431   */\n      dup2\n        /* \"#utility.yul\":4424:4428   */\n      dup2\n        /* \"#utility.yul\":4421:4432   */\n      gt\n        /* \"#utility.yul\":4418:4455   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":4435:4453   */\n      tag_182\n      tag_135\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4418:4455   */\n    tag_181:\n        /* \"#utility.yul\":4268:4462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4468:4648   */\n    tag_136:\n        /* \"#utility.yul\":4516:4593   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4513:4514   */\n      0x00\n        /* \"#utility.yul\":4506:4594   */\n      mstore\n        /* \"#utility.yul\":4613:4617   */\n      0x12\n        /* \"#utility.yul\":4610:4611   */\n      0x04\n        /* \"#utility.yul\":4603:4618   */\n      mstore\n        /* \"#utility.yul\":4637:4641   */\n      0x24\n        /* \"#utility.yul\":4634:4635   */\n      0x00\n        /* \"#utility.yul\":4627:4642   */\n      revert\n        /* \"#utility.yul\":4654:4839   */\n    tag_61:\n        /* \"#utility.yul\":4694:4695   */\n      0x00\n        /* \"#utility.yul\":4711:4731   */\n      tag_185\n        /* \"#utility.yul\":4729:4730   */\n      dup3\n        /* \"#utility.yul\":4711:4731   */\n      tag_120\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4706:4731   */\n      swap2\n      pop\n        /* \"#utility.yul\":4745:4765   */\n      tag_186\n        /* \"#utility.yul\":4763:4764   */\n      dup4\n        /* \"#utility.yul\":4745:4765   */\n      tag_120\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4740:4765   */\n      swap3\n      pop\n        /* \"#utility.yul\":4784:4785   */\n      dup3\n        /* \"#utility.yul\":4774:4809   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":4789:4807   */\n      tag_188\n      tag_136\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4774:4809   */\n    tag_187:\n        /* \"#utility.yul\":4831:4832   */\n      dup3\n        /* \"#utility.yul\":4828:4829   */\n      dup3\n        /* \"#utility.yul\":4824:4833   */\n      div\n        /* \"#utility.yul\":4819:4833   */\n      swap1\n      pop\n        /* \"#utility.yul\":4654:4839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4845:5255   */\n    tag_63:\n        /* \"#utility.yul\":4885:4892   */\n      0x00\n        /* \"#utility.yul\":4908:4928   */\n      tag_190\n        /* \"#utility.yul\":4926:4927   */\n      dup3\n        /* \"#utility.yul\":4908:4928   */\n      tag_120\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4903:4928   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:4962   */\n      tag_191\n        /* \"#utility.yul\":4960:4961   */\n      dup4\n        /* \"#utility.yul\":4942:4962   */\n      tag_120\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4937:4962   */\n      swap3\n      pop\n        /* \"#utility.yul\":4997:4998   */\n      dup3\n        /* \"#utility.yul\":4994:4995   */\n      dup3\n        /* \"#utility.yul\":4990:4999   */\n      mul\n        /* \"#utility.yul\":5019:5049   */\n      tag_192\n        /* \"#utility.yul\":5037:5048   */\n      dup2\n        /* \"#utility.yul\":5019:5049   */\n      tag_120\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":5008:5049   */\n      swap2\n      pop\n        /* \"#utility.yul\":5198:5199   */\n      dup3\n        /* \"#utility.yul\":5189:5196   */\n      dup3\n        /* \"#utility.yul\":5185:5200   */\n      div\n        /* \"#utility.yul\":5182:5183   */\n      dup5\n        /* \"#utility.yul\":5179:5201   */\n      eq\n        /* \"#utility.yul\":5159:5160   */\n      dup4\n        /* \"#utility.yul\":5152:5161   */\n      iszero\n        /* \"#utility.yul\":5132:5215   */\n      or\n        /* \"#utility.yul\":5109:5248   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":5228:5246   */\n      tag_194\n      tag_135\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5109:5248   */\n    tag_193:\n        /* \"#utility.yul\":4893:5255   */\n      pop\n        /* \"#utility.yul\":4845:5255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5261:5491   */\n    tag_137:\n        /* \"#utility.yul\":5401:5435   */\n      0x626964206d757374206265206e6f74206c657373207468616e20746865206375\n        /* \"#utility.yul\":5397:5398   */\n      0x00\n        /* \"#utility.yul\":5389:5395   */\n      dup3\n        /* \"#utility.yul\":5385:5399   */\n      add\n        /* \"#utility.yul\":5378:5436   */\n      mstore\n        /* \"#utility.yul\":5470:5483   */\n      0x7272656e74207072696365000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5465:5467   */\n      0x20\n        /* \"#utility.yul\":5457:5463   */\n      dup3\n        /* \"#utility.yul\":5453:5468   */\n      add\n        /* \"#utility.yul\":5446:5484   */\n      mstore\n        /* \"#utility.yul\":5261:5491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5497:5863   */\n    tag_138:\n        /* \"#utility.yul\":5639:5642   */\n      0x00\n        /* \"#utility.yul\":5660:5727   */\n      tag_197\n        /* \"#utility.yul\":5724:5726   */\n      0x2b\n        /* \"#utility.yul\":5719:5722   */\n      dup4\n        /* \"#utility.yul\":5660:5727   */\n      tag_130\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5653:5727   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5829   */\n      tag_198\n        /* \"#utility.yul\":5825:5828   */\n      dup3\n        /* \"#utility.yul\":5736:5829   */\n      tag_137\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5854:5856   */\n      0x40\n        /* \"#utility.yul\":5849:5852   */\n      dup3\n        /* \"#utility.yul\":5845:5857   */\n      add\n        /* \"#utility.yul\":5838:5857   */\n      swap1\n      pop\n        /* \"#utility.yul\":5497:5863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5869:6288   */\n    tag_71:\n        /* \"#utility.yul\":6035:6039   */\n      0x00\n        /* \"#utility.yul\":6073:6075   */\n      0x20\n        /* \"#utility.yul\":6062:6071   */\n      dup3\n        /* \"#utility.yul\":6058:6076   */\n      add\n        /* \"#utility.yul\":6050:6076   */\n      swap1\n      pop\n        /* \"#utility.yul\":6122:6131   */\n      dup2\n        /* \"#utility.yul\":6116:6120   */\n      dup2\n        /* \"#utility.yul\":6112:6132   */\n      sub\n        /* \"#utility.yul\":6108:6109   */\n      0x00\n        /* \"#utility.yul\":6097:6106   */\n      dup4\n        /* \"#utility.yul\":6093:6110   */\n      add\n        /* \"#utility.yul\":6086:6133   */\n      mstore\n        /* \"#utility.yul\":6150:6281   */\n      tag_200\n        /* \"#utility.yul\":6276:6280   */\n      dup2\n        /* \"#utility.yul\":6150:6281   */\n      tag_138\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":6142:6281   */\n      swap1\n      pop\n        /* \"#utility.yul\":5869:6288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6294:6626   */\n    tag_73:\n        /* \"#utility.yul\":6415:6419   */\n      0x00\n        /* \"#utility.yul\":6453:6455   */\n      0x40\n        /* \"#utility.yul\":6442:6451   */\n      dup3\n        /* \"#utility.yul\":6438:6456   */\n      add\n        /* \"#utility.yul\":6430:6456   */\n      swap1\n      pop\n        /* \"#utility.yul\":6466:6537   */\n      tag_202\n        /* \"#utility.yul\":6534:6535   */\n      0x00\n        /* \"#utility.yul\":6523:6532   */\n      dup4\n        /* \"#utility.yul\":6519:6536   */\n      add\n        /* \"#utility.yul\":6510:6516   */\n      dup6\n        /* \"#utility.yul\":6466:6537   */\n      tag_124\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6547:6619   */\n      tag_203\n        /* \"#utility.yul\":6615:6617   */\n      0x20\n        /* \"#utility.yul\":6604:6613   */\n      dup4\n        /* \"#utility.yul\":6600:6618   */\n      add\n        /* \"#utility.yul\":6591:6597   */\n      dup5\n        /* \"#utility.yul\":6547:6619   */\n      tag_121\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6294:6626   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6632:6964   */\n    tag_85:\n        /* \"#utility.yul\":6753:6757   */\n      0x00\n        /* \"#utility.yul\":6791:6793   */\n      0x40\n        /* \"#utility.yul\":6780:6789   */\n      dup3\n        /* \"#utility.yul\":6776:6794   */\n      add\n        /* \"#utility.yul\":6768:6794   */\n      swap1\n      pop\n        /* \"#utility.yul\":6804:6875   */\n      tag_205\n        /* \"#utility.yul\":6872:6873   */\n      0x00\n        /* \"#utility.yul\":6861:6870   */\n      dup4\n        /* \"#utility.yul\":6857:6874   */\n      add\n        /* \"#utility.yul\":6848:6854   */\n      dup6\n        /* \"#utility.yul\":6804:6875   */\n      tag_121\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6885:6957   */\n      tag_206\n        /* \"#utility.yul\":6953:6955   */\n      0x20\n        /* \"#utility.yul\":6942:6951   */\n      dup4\n        /* \"#utility.yul\":6938:6956   */\n      add\n        /* \"#utility.yul\":6929:6935   */\n      dup5\n        /* \"#utility.yul\":6885:6957   */\n      tag_121\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6632:6964   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220240062797b261b53923b2f38b113436f1f36111d72c45850ababe288d0c22a5e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_230": {
									"entryPoint": null,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:3",
										"nodeType": "YulBlock",
										"src": "0:590:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:3",
													"nodeType": "YulBlock",
													"src": "52:81:3",
													"statements": [
														{
															"nativeSrc": "62:65:3",
															"nodeType": "YulAssignment",
															"src": "62:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:3",
																		"nodeType": "YulLiteral",
																		"src": "84:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:3"
																},
																"nativeSrc": "73:54:3",
																"nodeType": "YulFunctionCall",
																"src": "73:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:126:3"
											},
											{
												"body": {
													"nativeSrc": "184:51:3",
													"nodeType": "YulBlock",
													"src": "184:51:3",
													"statements": [
														{
															"nativeSrc": "194:35:3",
															"nodeType": "YulAssignment",
															"src": "194:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:3"
																},
																"nativeSrc": "205:24:3",
																"nodeType": "YulFunctionCall",
																"src": "205:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:3",
														"nodeType": "YulTypedName",
														"src": "166:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:3",
														"nodeType": "YulTypedName",
														"src": "176:7:3",
														"type": ""
													}
												],
												"src": "139:96:3"
											},
											{
												"body": {
													"nativeSrc": "306:53:3",
													"nodeType": "YulBlock",
													"src": "306:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:3"
																		},
																		"nativeSrc": "328:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:3"
																},
																"nativeSrc": "316:37:3",
																"nodeType": "YulFunctionCall",
																"src": "316:37:3"
															},
															"nativeSrc": "316:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:3",
														"nodeType": "YulTypedName",
														"src": "294:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:3",
														"nodeType": "YulTypedName",
														"src": "301:3:3",
														"type": ""
													}
												],
												"src": "241:118:3"
											},
											{
												"body": {
													"nativeSrc": "463:124:3",
													"nodeType": "YulBlock",
													"src": "463:124:3",
													"statements": [
														{
															"nativeSrc": "473:26:3",
															"nodeType": "YulAssignment",
															"src": "473:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:3",
																		"nodeType": "YulLiteral",
																		"src": "496:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:3"
																},
																"nativeSrc": "481:18:3",
																"nodeType": "YulFunctionCall",
																"src": "481:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:3",
																				"nodeType": "YulLiteral",
																				"src": "577:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:3"
																		},
																		"nativeSrc": "562:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:3"
																},
																"nativeSrc": "509:71:3",
																"nodeType": "YulFunctionCall",
																"src": "509:71:3"
															},
															"nativeSrc": "509:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:3",
														"nodeType": "YulTypedName",
														"src": "435:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:3",
														"nodeType": "YulTypedName",
														"src": "447:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:3",
														"nodeType": "YulTypedName",
														"src": "458:4:3",
														"type": ""
													}
												],
												"src": "365:222:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b610c62806101bc5f395ff3fe608060405260043610610090575f3560e01c80638da5cb5b116100585780638da5cb5b1461010a57806398d5fdca14610134578063d57bde791461015e578063dfbf53ae14610188578063f2fde38b146101b257610090565b80631998aeef146100945780634e71d92d1461009e5780636b64c769146100b4578063715018a6146100ca57806378e97925146100e0575b5f5ffd5b61009c6101da565b005b3480156100a9575f5ffd5b506100b26103fd565b005b3480156100bf575f5ffd5b506100c8610452565b005b3480156100d5575f5ffd5b506100de6104ed565b005b3480156100eb575f5ffd5b506100f4610500565b60405161010191906108a8565b60405180910390f35b348015610115575f5ffd5b5061011e610506565b60405161012b9190610900565b60405180910390f35b34801561013f575f5ffd5b5061014861052d565b60405161015591906108a8565b60405180910390f35b348015610169575f5ffd5b50610172610692565b60405161017f91906108a8565b60405180910390f35b348015610193575f5ffd5b5061019c610698565b6040516101a99190610900565b60405180910390f35b3480156101bd575f5ffd5b506101d860048036038101906101d39190610947565b6106bd565b005b5f6001541161021e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610215906109cc565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a490610a34565b60405180910390fd5b5f600a605a670de0b6b3a7640000678ac7230489e800006102ce9190610a7f565b6102d89190610adf565b6102e29190610b0f565b600a600154426102f29190610a7f565b6102fc9190610adf565b6103069190610b0f565b678ac7230489e800006103199190610a7f565b9050670de0b6b3a764000081101561033757670de0b6b3a764000090505b8034101561037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037190610bc0565b60405180910390fd5b3360035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346002819055507fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda33346040516103f2929190610bde565b60405180910390a150565b610405610741565b61040d610506565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561044f573d5f5f3e3d5ffd5b50565b61045a610741565b426001819055505f60035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f6002819055507ff8910119ddbef5440c54532457dfe8250a10ed39e583292818f44724b9e1344c678ac7230489e800006001546040516104e3929190610c05565b60405180910390a1565b6104f5610741565b6104fe5f6107c8565b565b60015481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f5f60015411610572576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610569906109cc565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f890610a34565b60405180910390fd5b5f600a605a670de0b6b3a7640000678ac7230489e800006106229190610a7f565b61062c9190610adf565b6106369190610b0f565b600a600154426106469190610a7f565b6106509190610adf565b61065a9190610b0f565b678ac7230489e8000061066d9190610a7f565b9050670de0b6b3a764000081101561068b57670de0b6b3a764000090505b8091505090565b60025481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106c5610741565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610735575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161072c9190610900565b60405180910390fd5b61073e816107c8565b50565b610749610889565b73ffffffffffffffffffffffffffffffffffffffff16610767610506565b73ffffffffffffffffffffffffffffffffffffffff16146107c65761078a610889565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107bd9190610900565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b6108a281610890565b82525050565b5f6020820190506108bb5f830184610899565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108ea826108c1565b9050919050565b6108fa816108e0565b82525050565b5f6020820190506109135f8301846108f1565b92915050565b5f5ffd5b610926816108e0565b8114610930575f5ffd5b50565b5f813590506109418161091d565b92915050565b5f6020828403121561095c5761095b610919565b5b5f61096984828501610933565b91505092915050565b5f82825260208201905092915050565b7f61756374696f6e206e6f742079657420737461727465640000000000000000005f82015250565b5f6109b6601783610972565b91506109c182610982565b602082019050919050565b5f6020820190508181035f8301526109e3816109aa565b9050919050565b7f61756374696f6e206973206f76657200000000000000000000000000000000005f82015250565b5f610a1e600f83610972565b9150610a29826109ea565b602082019050919050565b5f6020820190508181035f830152610a4b81610a12565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a8982610890565b9150610a9483610890565b9250828203905081811115610aac57610aab610a52565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610ae982610890565b9150610af483610890565b925082610b0457610b03610ab2565b5b828204905092915050565b5f610b1982610890565b9150610b2483610890565b9250828202610b3281610890565b91508282048414831517610b4957610b48610a52565b5b5092915050565b7f626964206d757374206265206e6f74206c657373207468616e207468652063755f8201527f7272656e74207072696365000000000000000000000000000000000000000000602082015250565b5f610baa602b83610972565b9150610bb582610b50565b604082019050919050565b5f6020820190508181035f830152610bd781610b9e565b9050919050565b5f604082019050610bf15f8301856108f1565b610bfe6020830184610899565b9392505050565b5f604082019050610c185f830185610899565b610c256020830184610899565b939250505056fea2646970667358221220240062797b261b53923b2f38b113436f1f36111d72c45850ababe288d0c22a5e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC62 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B2 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x6B64C769 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x1DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xDE PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 SLOAD GT PUSH2 0x21E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A4 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x5A PUSH8 0xDE0B6B3A7640000 PUSH8 0x8AC7230489E80000 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 POP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xDAEC4582D5D9595688C8C98545FDD1C696D41C6AEAEB636737E84ED2F5C00EDA CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP3 SWAP2 SWAP1 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x405 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x40D PUSH2 0x506 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x45A PUSH2 0x741 JUMP JUMPDEST TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xF8910119DDBEF5440C54532457DFE8250A10ED39E583292818F44724B9E1344C PUSH8 0x8AC7230489E80000 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP3 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x4F5 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4FE PUSH0 PUSH2 0x7C8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SLOAD GT PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x5A PUSH8 0xDE0B6B3A7640000 PUSH8 0x8AC7230489E80000 PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x62C SWAP2 SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x636 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x646 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x650 SWAP2 SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x65A SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x68B JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0x741 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x735 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x7C8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x749 PUSH2 0x889 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x767 PUSH2 0x506 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C6 JUMPI PUSH2 0x78A PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BD SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A2 DUP2 PUSH2 0x890 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BB PUSH0 DUP4 ADD DUP5 PUSH2 0x899 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8EA DUP3 PUSH2 0x8C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FA DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x913 PUSH0 DUP4 ADD DUP5 PUSH2 0x8F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x926 DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x930 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x941 DUP2 PUSH2 0x91D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x919 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x969 DUP5 DUP3 DUP6 ADD PUSH2 0x933 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x61756374696F6E206E6F74207965742073746172746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9B6 PUSH1 0x17 DUP4 PUSH2 0x972 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C1 DUP3 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9E3 DUP2 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x61756374696F6E206973206F7665720000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA1E PUSH1 0xF DUP4 PUSH2 0x972 JUMP JUMPDEST SWAP2 POP PUSH2 0xA29 DUP3 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA4B DUP2 PUSH2 0xA12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA89 DUP3 PUSH2 0x890 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xAAC JUMPI PUSH2 0xAAB PUSH2 0xA52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAE9 DUP3 PUSH2 0x890 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF4 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB04 JUMPI PUSH2 0xB03 PUSH2 0xAB2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB19 DUP3 PUSH2 0x890 JUMP JUMPDEST SWAP2 POP PUSH2 0xB24 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB32 DUP2 PUSH2 0x890 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB49 JUMPI PUSH2 0xB48 PUSH2 0xA52 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x626964206D757374206265206E6F74206C657373207468616E20746865206375 PUSH0 DUP3 ADD MSTORE PUSH32 0x7272656E74207072696365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBAA PUSH1 0x2B DUP4 PUSH2 0x972 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB5 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBD7 DUP2 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBF1 PUSH0 DUP4 ADD DUP6 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0xBFE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x899 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC18 PUSH0 DUP4 ADD DUP6 PUSH2 0x899 JUMP JUMPDEST PUSH2 0xC25 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x899 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 STOP PUSH3 0x797B26 SHL MSTORE8 SWAP3 EXTCODESIZE 0x2F CODESIZE 0xB1 SGT NUMBER PUSH16 0x1F36111D72C45850ABABE288D0C22A5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "117:3077:2:-:0;;;923:42;;;;;;;;;;945:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;117:3077:2;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;117:3077:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1857,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 2185,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1992,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bid_327": {
									"entryPoint": 474,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_346": {
									"entryPoint": 1021,
									"id": 346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getPrice_395": {
									"entryPoint": 1325,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@highestBid_208": {
									"entryPoint": 1682,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1286,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1261,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAuction_257": {
									"entryPoint": 1106,
									"id": 257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startTime_206": {
									"entryPoint": 1280,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1725,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@winner_210": {
									"entryPoint": 1688,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3038,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3077,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e": {
									"entryPoint": 2896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94": {
									"entryPoint": 2434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6967:3",
										"nodeType": "YulBlock",
										"src": "0:6967:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:3",
													"nodeType": "YulBlock",
													"src": "52:32:3",
													"statements": [
														{
															"nativeSrc": "62:16:3",
															"nodeType": "YulAssignment",
															"src": "62:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:3",
																"nodeType": "YulIdentifier",
																"src": "73:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:3",
														"nodeType": "YulTypedName",
														"src": "34:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:3",
														"nodeType": "YulTypedName",
														"src": "44:7:3",
														"type": ""
													}
												],
												"src": "7:77:3"
											},
											{
												"body": {
													"nativeSrc": "155:53:3",
													"nodeType": "YulBlock",
													"src": "155:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:3"
																		},
																		"nativeSrc": "177:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:3"
																},
																"nativeSrc": "165:37:3",
																"nodeType": "YulFunctionCall",
																"src": "165:37:3"
															},
															"nativeSrc": "165:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:3",
														"nodeType": "YulTypedName",
														"src": "143:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:3",
														"nodeType": "YulTypedName",
														"src": "150:3:3",
														"type": ""
													}
												],
												"src": "90:118:3"
											},
											{
												"body": {
													"nativeSrc": "312:124:3",
													"nodeType": "YulBlock",
													"src": "312:124:3",
													"statements": [
														{
															"nativeSrc": "322:26:3",
															"nodeType": "YulAssignment",
															"src": "322:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:3",
																		"nodeType": "YulLiteral",
																		"src": "345:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:3"
																},
																"nativeSrc": "330:18:3",
																"nodeType": "YulFunctionCall",
																"src": "330:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:3",
																				"nodeType": "YulLiteral",
																				"src": "426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:3"
																		},
																		"nativeSrc": "411:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:3"
																},
																"nativeSrc": "358:71:3",
																"nodeType": "YulFunctionCall",
																"src": "358:71:3"
															},
															"nativeSrc": "358:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:3",
														"nodeType": "YulTypedName",
														"src": "284:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:3",
														"nodeType": "YulTypedName",
														"src": "296:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:3",
														"nodeType": "YulTypedName",
														"src": "307:4:3",
														"type": ""
													}
												],
												"src": "214:222:3"
											},
											{
												"body": {
													"nativeSrc": "487:81:3",
													"nodeType": "YulBlock",
													"src": "487:81:3",
													"statements": [
														{
															"nativeSrc": "497:65:3",
															"nodeType": "YulAssignment",
															"src": "497:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "512:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "519:42:3",
																		"nodeType": "YulLiteral",
																		"src": "519:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "508:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:3"
																},
																"nativeSrc": "508:54:3",
																"nodeType": "YulFunctionCall",
																"src": "508:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "497:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "442:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "469:5:3",
														"nodeType": "YulTypedName",
														"src": "469:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "479:7:3",
														"nodeType": "YulTypedName",
														"src": "479:7:3",
														"type": ""
													}
												],
												"src": "442:126:3"
											},
											{
												"body": {
													"nativeSrc": "619:51:3",
													"nodeType": "YulBlock",
													"src": "619:51:3",
													"statements": [
														{
															"nativeSrc": "629:35:3",
															"nodeType": "YulAssignment",
															"src": "629:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "658:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "640:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:3"
																},
																"nativeSrc": "640:24:3",
																"nodeType": "YulFunctionCall",
																"src": "640:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "629:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "574:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "601:5:3",
														"nodeType": "YulTypedName",
														"src": "601:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "611:7:3",
														"nodeType": "YulTypedName",
														"src": "611:7:3",
														"type": ""
													}
												],
												"src": "574:96:3"
											},
											{
												"body": {
													"nativeSrc": "741:53:3",
													"nodeType": "YulBlock",
													"src": "741:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "763:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:3"
																		},
																		"nativeSrc": "763:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:3"
																},
																"nativeSrc": "751:37:3",
																"nodeType": "YulFunctionCall",
																"src": "751:37:3"
															},
															"nativeSrc": "751:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "676:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:3",
														"nodeType": "YulTypedName",
														"src": "729:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:3",
														"nodeType": "YulTypedName",
														"src": "736:3:3",
														"type": ""
													}
												],
												"src": "676:118:3"
											},
											{
												"body": {
													"nativeSrc": "898:124:3",
													"nodeType": "YulBlock",
													"src": "898:124:3",
													"statements": [
														{
															"nativeSrc": "908:26:3",
															"nodeType": "YulAssignment",
															"src": "908:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:3",
																		"nodeType": "YulLiteral",
																		"src": "931:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:3"
																},
																"nativeSrc": "916:18:3",
																"nodeType": "YulFunctionCall",
																"src": "916:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:3"
																		},
																		"nativeSrc": "997:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "944:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:3"
																},
																"nativeSrc": "944:71:3",
																"nodeType": "YulFunctionCall",
																"src": "944:71:3"
															},
															"nativeSrc": "944:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "800:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:3",
														"nodeType": "YulTypedName",
														"src": "870:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:3",
														"nodeType": "YulTypedName",
														"src": "882:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:3",
														"nodeType": "YulTypedName",
														"src": "893:4:3",
														"type": ""
													}
												],
												"src": "800:222:3"
											},
											{
												"body": {
													"nativeSrc": "1068:35:3",
													"nodeType": "YulBlock",
													"src": "1068:35:3",
													"statements": [
														{
															"nativeSrc": "1078:19:3",
															"nodeType": "YulAssignment",
															"src": "1078:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:3"
																},
																"nativeSrc": "1088:9:3",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:3",
														"nodeType": "YulTypedName",
														"src": "1061:6:3",
														"type": ""
													}
												],
												"src": "1028:75:3"
											},
											{
												"body": {
													"nativeSrc": "1198:28:3",
													"nodeType": "YulBlock",
													"src": "1198:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:3"
																},
																"nativeSrc": "1208:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:3"
															},
															"nativeSrc": "1208:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:3"
											},
											{
												"body": {
													"nativeSrc": "1321:28:3",
													"nodeType": "YulBlock",
													"src": "1321:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:3"
																},
																"nativeSrc": "1331:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:3"
															},
															"nativeSrc": "1331:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:3"
											},
											{
												"body": {
													"nativeSrc": "1398:79:3",
													"nodeType": "YulBlock",
													"src": "1398:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:3",
																"nodeType": "YulBlock",
																"src": "1455:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:3"
																			},
																			"nativeSrc": "1457:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:3"
																		},
																		"nativeSrc": "1457:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1428:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:3"
																				},
																				"nativeSrc": "1428:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:3"
																		},
																		"nativeSrc": "1418:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:3"
																},
																"nativeSrc": "1411:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:3"
															},
															"nativeSrc": "1408:63:3",
															"nodeType": "YulIf",
															"src": "1408:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1355:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:3",
														"nodeType": "YulTypedName",
														"src": "1391:5:3",
														"type": ""
													}
												],
												"src": "1355:122:3"
											},
											{
												"body": {
													"nativeSrc": "1535:87:3",
													"nodeType": "YulBlock",
													"src": "1535:87:3",
													"statements": [
														{
															"nativeSrc": "1545:29:3",
															"nodeType": "YulAssignment",
															"src": "1545:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:3"
																},
																"nativeSrc": "1554:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1583:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:3"
																},
																"nativeSrc": "1583:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:3"
															},
															"nativeSrc": "1583:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1483:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:3",
														"nodeType": "YulTypedName",
														"src": "1513:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:3",
														"nodeType": "YulTypedName",
														"src": "1521:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:3",
														"nodeType": "YulTypedName",
														"src": "1529:5:3",
														"type": ""
													}
												],
												"src": "1483:139:3"
											},
											{
												"body": {
													"nativeSrc": "1694:263:3",
													"nodeType": "YulBlock",
													"src": "1694:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1740:83:3",
																"nodeType": "YulBlock",
																"src": "1740:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1742:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1742:77:3"
																			},
																			"nativeSrc": "1742:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1742:79:3"
																		},
																		"nativeSrc": "1742:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1724:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1724:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1711:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:3"
																		},
																		"nativeSrc": "1711:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1707:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1707:3:3"
																},
																"nativeSrc": "1707:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1707:32:3"
															},
															"nativeSrc": "1704:119:3",
															"nodeType": "YulIf",
															"src": "1704:119:3"
														},
														{
															"nativeSrc": "1833:117:3",
															"nodeType": "YulBlock",
															"src": "1833:117:3",
															"statements": [
																{
																	"nativeSrc": "1848:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1848:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1862:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1862:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1852:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1852:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1877:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1877:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1912:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1912:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1923:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1923:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1908:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1908:3:3"
																				},
																				"nativeSrc": "1908:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1908:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1932:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1887:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1887:20:3"
																		},
																		"nativeSrc": "1887:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1877:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1877:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1628:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1664:9:3",
														"nodeType": "YulTypedName",
														"src": "1664:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1675:7:3",
														"nodeType": "YulTypedName",
														"src": "1675:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1687:6:3",
														"nodeType": "YulTypedName",
														"src": "1687:6:3",
														"type": ""
													}
												],
												"src": "1628:329:3"
											},
											{
												"body": {
													"nativeSrc": "2059:73:3",
													"nodeType": "YulBlock",
													"src": "2059:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2076:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2081:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:3"
																},
																"nativeSrc": "2069:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2069:19:3"
															},
															"nativeSrc": "2069:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "2069:19:3"
														},
														{
															"nativeSrc": "2097:29:3",
															"nodeType": "YulAssignment",
															"src": "2097:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2116:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2116:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2121:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2121:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2112:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2112:3:3"
																},
																"nativeSrc": "2112:14:3",
																"nodeType": "YulFunctionCall",
																"src": "2112:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2097:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1963:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2031:3:3",
														"nodeType": "YulTypedName",
														"src": "2031:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2036:6:3",
														"nodeType": "YulTypedName",
														"src": "2036:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2047:11:3",
														"nodeType": "YulTypedName",
														"src": "2047:11:3",
														"type": ""
													}
												],
												"src": "1963:169:3"
											},
											{
												"body": {
													"nativeSrc": "2244:67:3",
													"nodeType": "YulBlock",
													"src": "2244:67:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2266:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2274:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2274:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2262:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2262:3:3"
																		},
																		"nativeSrc": "2262:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2262:14:3"
																	},
																	{
																		"hexValue": "61756374696f6e206e6f74207965742073746172746564",
																		"kind": "string",
																		"nativeSrc": "2278:25:3",
																		"nodeType": "YulLiteral",
																		"src": "2278:25:3",
																		"type": "",
																		"value": "auction not yet started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2255:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:3"
																},
																"nativeSrc": "2255:49:3",
																"nodeType": "YulFunctionCall",
																"src": "2255:49:3"
															},
															"nativeSrc": "2255:49:3",
															"nodeType": "YulExpressionStatement",
															"src": "2255:49:3"
														}
													]
												},
												"name": "store_literal_in_memory_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94",
												"nativeSrc": "2138:173:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2236:6:3",
														"nodeType": "YulTypedName",
														"src": "2236:6:3",
														"type": ""
													}
												],
												"src": "2138:173:3"
											},
											{
												"body": {
													"nativeSrc": "2463:220:3",
													"nodeType": "YulBlock",
													"src": "2463:220:3",
													"statements": [
														{
															"nativeSrc": "2473:74:3",
															"nodeType": "YulAssignment",
															"src": "2473:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2539:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2539:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2544:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2544:2:3",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2480:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2480:58:3"
																},
																"nativeSrc": "2480:67:3",
																"nodeType": "YulFunctionCall",
																"src": "2480:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2473:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2645:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2645:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94",
																	"nativeSrc": "2556:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "2556:88:3"
																},
																"nativeSrc": "2556:93:3",
																"nodeType": "YulFunctionCall",
																"src": "2556:93:3"
															},
															"nativeSrc": "2556:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "2556:93:3"
														},
														{
															"nativeSrc": "2658:19:3",
															"nodeType": "YulAssignment",
															"src": "2658:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2669:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2669:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2674:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2674:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2665:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:3"
																},
																"nativeSrc": "2665:12:3",
																"nodeType": "YulFunctionCall",
																"src": "2665:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2658:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2317:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2451:3:3",
														"nodeType": "YulTypedName",
														"src": "2451:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2459:3:3",
														"nodeType": "YulTypedName",
														"src": "2459:3:3",
														"type": ""
													}
												],
												"src": "2317:366:3"
											},
											{
												"body": {
													"nativeSrc": "2860:248:3",
													"nodeType": "YulBlock",
													"src": "2860:248:3",
													"statements": [
														{
															"nativeSrc": "2870:26:3",
															"nodeType": "YulAssignment",
															"src": "2870:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2882:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2882:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2893:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2893:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2878:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2878:3:3"
																},
																"nativeSrc": "2878:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2878:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2870:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2870:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2917:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2917:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2928:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2928:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2913:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2913:3:3"
																		},
																		"nativeSrc": "2913:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2913:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2936:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2936:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2942:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2942:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2932:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2932:3:3"
																		},
																		"nativeSrc": "2932:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2932:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2906:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:3"
																},
																"nativeSrc": "2906:47:3",
																"nodeType": "YulFunctionCall",
																"src": "2906:47:3"
															},
															"nativeSrc": "2906:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "2906:47:3"
														},
														{
															"nativeSrc": "2962:139:3",
															"nodeType": "YulAssignment",
															"src": "2962:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3096:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "3096:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2970:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "2970:124:3"
																},
																"nativeSrc": "2970:131:3",
																"nodeType": "YulFunctionCall",
																"src": "2970:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2962:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2962:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2689:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2840:9:3",
														"nodeType": "YulTypedName",
														"src": "2840:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2855:4:3",
														"nodeType": "YulTypedName",
														"src": "2855:4:3",
														"type": ""
													}
												],
												"src": "2689:419:3"
											},
											{
												"body": {
													"nativeSrc": "3220:59:3",
													"nodeType": "YulBlock",
													"src": "3220:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3242:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3242:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3250:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3250:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3238:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3238:3:3"
																		},
																		"nativeSrc": "3238:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3238:14:3"
																	},
																	{
																		"hexValue": "61756374696f6e206973206f766572",
																		"kind": "string",
																		"nativeSrc": "3254:17:3",
																		"nodeType": "YulLiteral",
																		"src": "3254:17:3",
																		"type": "",
																		"value": "auction is over"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3231:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:3"
																},
																"nativeSrc": "3231:41:3",
																"nodeType": "YulFunctionCall",
																"src": "3231:41:3"
															},
															"nativeSrc": "3231:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "3231:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b",
												"nativeSrc": "3114:165:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3212:6:3",
														"nodeType": "YulTypedName",
														"src": "3212:6:3",
														"type": ""
													}
												],
												"src": "3114:165:3"
											},
											{
												"body": {
													"nativeSrc": "3431:220:3",
													"nodeType": "YulBlock",
													"src": "3431:220:3",
													"statements": [
														{
															"nativeSrc": "3441:74:3",
															"nodeType": "YulAssignment",
															"src": "3441:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3507:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3507:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3512:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3512:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3448:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "3448:58:3"
																},
																"nativeSrc": "3448:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3448:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3441:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3441:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3613:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3613:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b",
																	"nativeSrc": "3524:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "3524:88:3"
																},
																"nativeSrc": "3524:93:3",
																"nodeType": "YulFunctionCall",
																"src": "3524:93:3"
															},
															"nativeSrc": "3524:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "3524:93:3"
														},
														{
															"nativeSrc": "3626:19:3",
															"nodeType": "YulAssignment",
															"src": "3626:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3637:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3637:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3642:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3642:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3633:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3633:3:3"
																},
																"nativeSrc": "3633:12:3",
																"nodeType": "YulFunctionCall",
																"src": "3633:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3626:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3626:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3285:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3419:3:3",
														"nodeType": "YulTypedName",
														"src": "3419:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3427:3:3",
														"nodeType": "YulTypedName",
														"src": "3427:3:3",
														"type": ""
													}
												],
												"src": "3285:366:3"
											},
											{
												"body": {
													"nativeSrc": "3828:248:3",
													"nodeType": "YulBlock",
													"src": "3828:248:3",
													"statements": [
														{
															"nativeSrc": "3838:26:3",
															"nodeType": "YulAssignment",
															"src": "3838:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3850:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "3850:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3861:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3861:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3846:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3846:3:3"
																},
																"nativeSrc": "3846:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3846:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3838:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3838:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3885:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3885:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3896:1:3",
																				"nodeType": "YulLiteral",
																				"src": "3896:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3881:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3881:3:3"
																		},
																		"nativeSrc": "3881:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3881:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3904:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3904:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3910:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3910:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3900:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3900:3:3"
																		},
																		"nativeSrc": "3900:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3900:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3874:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:3"
																},
																"nativeSrc": "3874:47:3",
																"nodeType": "YulFunctionCall",
																"src": "3874:47:3"
															},
															"nativeSrc": "3874:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "3874:47:3"
														},
														{
															"nativeSrc": "3930:139:3",
															"nodeType": "YulAssignment",
															"src": "3930:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4064:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4064:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3938:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "3938:124:3"
																},
																"nativeSrc": "3938:131:3",
																"nodeType": "YulFunctionCall",
																"src": "3938:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3930:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "3930:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3657:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3808:9:3",
														"nodeType": "YulTypedName",
														"src": "3808:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3823:4:3",
														"nodeType": "YulTypedName",
														"src": "3823:4:3",
														"type": ""
													}
												],
												"src": "3657:419:3"
											},
											{
												"body": {
													"nativeSrc": "4110:152:3",
													"nodeType": "YulBlock",
													"src": "4110:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4127:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4127:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4130:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4130:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4120:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4120:6:3"
																},
																"nativeSrc": "4120:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4120:88:3"
															},
															"nativeSrc": "4120:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4120:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4224:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4224:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4227:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4227:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4217:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4217:6:3"
																},
																"nativeSrc": "4217:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4217:15:3"
															},
															"nativeSrc": "4217:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4217:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4248:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4248:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4251:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4251:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4241:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:3"
																},
																"nativeSrc": "4241:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4241:15:3"
															},
															"nativeSrc": "4241:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4241:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4082:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4082:180:3"
											},
											{
												"body": {
													"nativeSrc": "4313:149:3",
													"nodeType": "YulBlock",
													"src": "4313:149:3",
													"statements": [
														{
															"nativeSrc": "4323:25:3",
															"nodeType": "YulAssignment",
															"src": "4323:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4346:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4346:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4328:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4328:17:3"
																},
																"nativeSrc": "4328:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4328:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4323:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4323:1:3"
																}
															]
														},
														{
															"nativeSrc": "4357:25:3",
															"nodeType": "YulAssignment",
															"src": "4357:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4380:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4380:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4362:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4362:17:3"
																},
																"nativeSrc": "4362:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4362:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4357:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4357:1:3"
																}
															]
														},
														{
															"nativeSrc": "4391:17:3",
															"nodeType": "YulAssignment",
															"src": "4391:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4403:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4403:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4406:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4406:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4399:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:3"
																},
																"nativeSrc": "4399:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4399:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4391:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4391:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4433:22:3",
																"nodeType": "YulBlock",
																"src": "4433:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4435:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4435:16:3"
																			},
																			"nativeSrc": "4435:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4435:18:3"
																		},
																		"nativeSrc": "4435:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4435:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4424:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4424:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4430:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4430:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4421:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4421:2:3"
																},
																"nativeSrc": "4421:11:3",
																"nodeType": "YulFunctionCall",
																"src": "4421:11:3"
															},
															"nativeSrc": "4418:37:3",
															"nodeType": "YulIf",
															"src": "4418:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4268:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4299:1:3",
														"nodeType": "YulTypedName",
														"src": "4299:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4302:1:3",
														"nodeType": "YulTypedName",
														"src": "4302:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4308:4:3",
														"nodeType": "YulTypedName",
														"src": "4308:4:3",
														"type": ""
													}
												],
												"src": "4268:194:3"
											},
											{
												"body": {
													"nativeSrc": "4496:152:3",
													"nodeType": "YulBlock",
													"src": "4496:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4513:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4513:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4516:77:3",
																		"nodeType": "YulLiteral",
																		"src": "4516:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4506:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4506:6:3"
																},
																"nativeSrc": "4506:88:3",
																"nodeType": "YulFunctionCall",
																"src": "4506:88:3"
															},
															"nativeSrc": "4506:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "4506:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4610:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4610:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4613:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4613:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4603:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:3"
																},
																"nativeSrc": "4603:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4603:15:3"
															},
															"nativeSrc": "4603:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4603:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4634:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4634:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4637:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4637:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4627:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4627:6:3"
																},
																"nativeSrc": "4627:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4627:15:3"
															},
															"nativeSrc": "4627:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4627:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4468:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "4468:180:3"
											},
											{
												"body": {
													"nativeSrc": "4696:143:3",
													"nodeType": "YulBlock",
													"src": "4696:143:3",
													"statements": [
														{
															"nativeSrc": "4706:25:3",
															"nodeType": "YulAssignment",
															"src": "4706:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4729:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4729:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4711:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4711:17:3"
																},
																"nativeSrc": "4711:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4711:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4706:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4706:1:3"
																}
															]
														},
														{
															"nativeSrc": "4740:25:3",
															"nodeType": "YulAssignment",
															"src": "4740:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4763:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4763:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4745:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4745:17:3"
																},
																"nativeSrc": "4745:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4745:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4740:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4740:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4787:22:3",
																"nodeType": "YulBlock",
																"src": "4787:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "4789:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4789:16:3"
																			},
																			"nativeSrc": "4789:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4789:18:3"
																		},
																		"nativeSrc": "4789:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4789:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4784:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4784:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4777:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4777:6:3"
																},
																"nativeSrc": "4777:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4777:9:3"
															},
															"nativeSrc": "4774:35:3",
															"nodeType": "YulIf",
															"src": "4774:35:3"
														},
														{
															"nativeSrc": "4819:14:3",
															"nodeType": "YulAssignment",
															"src": "4819:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4828:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4828:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4831:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4831:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4824:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4824:3:3"
																},
																"nativeSrc": "4824:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4824:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4819:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4819:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4654:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4685:1:3",
														"nodeType": "YulTypedName",
														"src": "4685:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4688:1:3",
														"nodeType": "YulTypedName",
														"src": "4688:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4694:1:3",
														"nodeType": "YulTypedName",
														"src": "4694:1:3",
														"type": ""
													}
												],
												"src": "4654:185:3"
											},
											{
												"body": {
													"nativeSrc": "4893:362:3",
													"nodeType": "YulBlock",
													"src": "4893:362:3",
													"statements": [
														{
															"nativeSrc": "4903:25:3",
															"nodeType": "YulAssignment",
															"src": "4903:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4926:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4926:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4908:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4908:17:3"
																},
																"nativeSrc": "4908:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4908:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4903:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4903:1:3"
																}
															]
														},
														{
															"nativeSrc": "4937:25:3",
															"nodeType": "YulAssignment",
															"src": "4937:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4960:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4960:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4942:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4942:17:3"
																},
																"nativeSrc": "4942:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4942:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4937:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4937:1:3"
																}
															]
														},
														{
															"nativeSrc": "4971:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "4971:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4994:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4994:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4997:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4997:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4990:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:3"
																},
																"nativeSrc": "4990:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4990:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4975:11:3",
																	"nodeType": "YulTypedName",
																	"src": "4975:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5008:41:3",
															"nodeType": "YulAssignment",
															"src": "5008:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5037:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "5037:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5019:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "5019:17:3"
																},
																"nativeSrc": "5019:30:3",
																"nodeType": "YulFunctionCall",
																"src": "5019:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5008:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "5008:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5226:22:3",
																"nodeType": "YulBlock",
																"src": "5226:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5228:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "5228:16:3"
																			},
																			"nativeSrc": "5228:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5228:18:3"
																		},
																		"nativeSrc": "5228:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5228:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5159:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "5159:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5152:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "5152:6:3"
																				},
																				"nativeSrc": "5152:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5152:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5182:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "5182:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5189:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "5189:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5198:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "5198:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5185:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "5185:3:3"
																						},
																						"nativeSrc": "5185:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "5185:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5179:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "5179:2:3"
																				},
																				"nativeSrc": "5179:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5179:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5132:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "5132:2:3"
																		},
																		"nativeSrc": "5132:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5132:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5112:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:3"
																},
																"nativeSrc": "5112:113:3",
																"nodeType": "YulFunctionCall",
																"src": "5112:113:3"
															},
															"nativeSrc": "5109:139:3",
															"nodeType": "YulIf",
															"src": "5109:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4845:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4876:1:3",
														"nodeType": "YulTypedName",
														"src": "4876:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4879:1:3",
														"nodeType": "YulTypedName",
														"src": "4879:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4885:7:3",
														"nodeType": "YulTypedName",
														"src": "4885:7:3",
														"type": ""
													}
												],
												"src": "4845:410:3"
											},
											{
												"body": {
													"nativeSrc": "5367:124:3",
													"nodeType": "YulBlock",
													"src": "5367:124:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5389:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5389:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5397:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5397:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5385:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:3"
																		},
																		"nativeSrc": "5385:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5385:14:3"
																	},
																	{
																		"hexValue": "626964206d757374206265206e6f74206c657373207468616e20746865206375",
																		"kind": "string",
																		"nativeSrc": "5401:34:3",
																		"nodeType": "YulLiteral",
																		"src": "5401:34:3",
																		"type": "",
																		"value": "bid must be not less than the cu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5378:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5378:6:3"
																},
																"nativeSrc": "5378:58:3",
																"nodeType": "YulFunctionCall",
																"src": "5378:58:3"
															},
															"nativeSrc": "5378:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "5378:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5457:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5457:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5465:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5465:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5453:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5453:3:3"
																		},
																		"nativeSrc": "5453:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5453:15:3"
																	},
																	{
																		"hexValue": "7272656e74207072696365",
																		"kind": "string",
																		"nativeSrc": "5470:13:3",
																		"nodeType": "YulLiteral",
																		"src": "5470:13:3",
																		"type": "",
																		"value": "rrent price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5446:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5446:6:3"
																},
																"nativeSrc": "5446:38:3",
																"nodeType": "YulFunctionCall",
																"src": "5446:38:3"
															},
															"nativeSrc": "5446:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "5446:38:3"
														}
													]
												},
												"name": "store_literal_in_memory_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e",
												"nativeSrc": "5261:230:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5359:6:3",
														"nodeType": "YulTypedName",
														"src": "5359:6:3",
														"type": ""
													}
												],
												"src": "5261:230:3"
											},
											{
												"body": {
													"nativeSrc": "5643:220:3",
													"nodeType": "YulBlock",
													"src": "5643:220:3",
													"statements": [
														{
															"nativeSrc": "5653:74:3",
															"nodeType": "YulAssignment",
															"src": "5653:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5719:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5719:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5724:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5724:2:3",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5660:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "5660:58:3"
																},
																"nativeSrc": "5660:67:3",
																"nodeType": "YulFunctionCall",
																"src": "5660:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5653:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5653:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5825:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5825:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e",
																	"nativeSrc": "5736:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5736:88:3"
																},
																"nativeSrc": "5736:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5736:93:3"
															},
															"nativeSrc": "5736:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5736:93:3"
														},
														{
															"nativeSrc": "5838:19:3",
															"nodeType": "YulAssignment",
															"src": "5838:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5849:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5849:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5854:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5854:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5845:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5845:3:3"
																},
																"nativeSrc": "5845:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5845:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5838:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5838:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5497:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5631:3:3",
														"nodeType": "YulTypedName",
														"src": "5631:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5639:3:3",
														"nodeType": "YulTypedName",
														"src": "5639:3:3",
														"type": ""
													}
												],
												"src": "5497:366:3"
											},
											{
												"body": {
													"nativeSrc": "6040:248:3",
													"nodeType": "YulBlock",
													"src": "6040:248:3",
													"statements": [
														{
															"nativeSrc": "6050:26:3",
															"nodeType": "YulAssignment",
															"src": "6050:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6062:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6062:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6073:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6073:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6058:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:3"
																},
																"nativeSrc": "6058:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6058:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6050:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6050:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6097:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6097:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6108:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6108:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6093:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6093:3:3"
																		},
																		"nativeSrc": "6093:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6093:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6116:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6116:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6122:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6122:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6112:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6112:3:3"
																		},
																		"nativeSrc": "6112:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6112:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6086:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6086:6:3"
																},
																"nativeSrc": "6086:47:3",
																"nodeType": "YulFunctionCall",
																"src": "6086:47:3"
															},
															"nativeSrc": "6086:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "6086:47:3"
														},
														{
															"nativeSrc": "6142:139:3",
															"nodeType": "YulAssignment",
															"src": "6142:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6276:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6276:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6150:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "6150:124:3"
																},
																"nativeSrc": "6150:131:3",
																"nodeType": "YulFunctionCall",
																"src": "6150:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6142:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6142:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5869:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6020:9:3",
														"nodeType": "YulTypedName",
														"src": "6020:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6035:4:3",
														"nodeType": "YulTypedName",
														"src": "6035:4:3",
														"type": ""
													}
												],
												"src": "5869:419:3"
											},
											{
												"body": {
													"nativeSrc": "6420:206:3",
													"nodeType": "YulBlock",
													"src": "6420:206:3",
													"statements": [
														{
															"nativeSrc": "6430:26:3",
															"nodeType": "YulAssignment",
															"src": "6430:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6442:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6442:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6453:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6453:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6438:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6438:3:3"
																},
																"nativeSrc": "6438:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6438:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6430:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6430:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6510:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6510:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6523:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6523:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6534:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6534:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6519:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6519:3:3"
																		},
																		"nativeSrc": "6519:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6519:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6466:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "6466:43:3"
																},
																"nativeSrc": "6466:71:3",
																"nodeType": "YulFunctionCall",
																"src": "6466:71:3"
															},
															"nativeSrc": "6466:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "6466:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6591:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6591:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6604:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6604:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6615:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6615:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6600:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:3"
																		},
																		"nativeSrc": "6600:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6547:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "6547:43:3"
																},
																"nativeSrc": "6547:72:3",
																"nodeType": "YulFunctionCall",
																"src": "6547:72:3"
															},
															"nativeSrc": "6547:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "6547:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6294:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6384:9:3",
														"nodeType": "YulTypedName",
														"src": "6384:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6396:6:3",
														"nodeType": "YulTypedName",
														"src": "6396:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6404:6:3",
														"nodeType": "YulTypedName",
														"src": "6404:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6415:4:3",
														"nodeType": "YulTypedName",
														"src": "6415:4:3",
														"type": ""
													}
												],
												"src": "6294:332:3"
											},
											{
												"body": {
													"nativeSrc": "6758:206:3",
													"nodeType": "YulBlock",
													"src": "6758:206:3",
													"statements": [
														{
															"nativeSrc": "6768:26:3",
															"nodeType": "YulAssignment",
															"src": "6768:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6780:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6780:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6791:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6791:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6776:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6776:3:3"
																},
																"nativeSrc": "6776:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6776:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6768:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6768:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6848:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6848:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6861:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6861:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6872:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6872:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6857:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6857:3:3"
																		},
																		"nativeSrc": "6857:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6857:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6804:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "6804:43:3"
																},
																"nativeSrc": "6804:71:3",
																"nodeType": "YulFunctionCall",
																"src": "6804:71:3"
															},
															"nativeSrc": "6804:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "6804:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6929:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6929:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6942:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6953:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6953:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6938:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6938:3:3"
																		},
																		"nativeSrc": "6938:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6938:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6885:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "6885:43:3"
																},
																"nativeSrc": "6885:72:3",
																"nodeType": "YulFunctionCall",
																"src": "6885:72:3"
															},
															"nativeSrc": "6885:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "6885:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6632:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6722:9:3",
														"nodeType": "YulTypedName",
														"src": "6722:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6734:6:3",
														"nodeType": "YulTypedName",
														"src": "6734:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6742:6:3",
														"nodeType": "YulTypedName",
														"src": "6742:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6753:4:3",
														"nodeType": "YulTypedName",
														"src": "6753:4:3",
														"type": ""
													}
												],
												"src": "6632:332:3"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94(memPtr) {\n\n        mstore(add(memPtr, 0), \"auction not yet started\")\n\n    }\n\n    function abi_encode_t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b(memPtr) {\n\n        mstore(add(memPtr, 0), \"auction is over\")\n\n    }\n\n    function abi_encode_t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e(memPtr) {\n\n        mstore(add(memPtr, 0), \"bid must be not less than the cu\")\n\n        mstore(add(memPtr, 32), \"rrent price\")\n\n    }\n\n    function abi_encode_t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610090575f3560e01c80638da5cb5b116100585780638da5cb5b1461010a57806398d5fdca14610134578063d57bde791461015e578063dfbf53ae14610188578063f2fde38b146101b257610090565b80631998aeef146100945780634e71d92d1461009e5780636b64c769146100b4578063715018a6146100ca57806378e97925146100e0575b5f5ffd5b61009c6101da565b005b3480156100a9575f5ffd5b506100b26103fd565b005b3480156100bf575f5ffd5b506100c8610452565b005b3480156100d5575f5ffd5b506100de6104ed565b005b3480156100eb575f5ffd5b506100f4610500565b60405161010191906108a8565b60405180910390f35b348015610115575f5ffd5b5061011e610506565b60405161012b9190610900565b60405180910390f35b34801561013f575f5ffd5b5061014861052d565b60405161015591906108a8565b60405180910390f35b348015610169575f5ffd5b50610172610692565b60405161017f91906108a8565b60405180910390f35b348015610193575f5ffd5b5061019c610698565b6040516101a99190610900565b60405180910390f35b3480156101bd575f5ffd5b506101d860048036038101906101d39190610947565b6106bd565b005b5f6001541161021e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610215906109cc565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a490610a34565b60405180910390fd5b5f600a605a670de0b6b3a7640000678ac7230489e800006102ce9190610a7f565b6102d89190610adf565b6102e29190610b0f565b600a600154426102f29190610a7f565b6102fc9190610adf565b6103069190610b0f565b678ac7230489e800006103199190610a7f565b9050670de0b6b3a764000081101561033757670de0b6b3a764000090505b8034101561037a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037190610bc0565b60405180910390fd5b3360035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346002819055507fdaec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda33346040516103f2929190610bde565b60405180910390a150565b610405610741565b61040d610506565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561044f573d5f5f3e3d5ffd5b50565b61045a610741565b426001819055505f60035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f6002819055507ff8910119ddbef5440c54532457dfe8250a10ed39e583292818f44724b9e1344c678ac7230489e800006001546040516104e3929190610c05565b60405180910390a1565b6104f5610741565b6104fe5f6107c8565b565b60015481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f5f60015411610572576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610569906109cc565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f890610a34565b60405180910390fd5b5f600a605a670de0b6b3a7640000678ac7230489e800006106229190610a7f565b61062c9190610adf565b6106369190610b0f565b600a600154426106469190610a7f565b6106509190610adf565b61065a9190610b0f565b678ac7230489e8000061066d9190610a7f565b9050670de0b6b3a764000081101561068b57670de0b6b3a764000090505b8091505090565b60025481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106c5610741565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610735575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161072c9190610900565b60405180910390fd5b61073e816107c8565b50565b610749610889565b73ffffffffffffffffffffffffffffffffffffffff16610767610506565b73ffffffffffffffffffffffffffffffffffffffff16146107c65761078a610889565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107bd9190610900565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f819050919050565b6108a281610890565b82525050565b5f6020820190506108bb5f830184610899565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108ea826108c1565b9050919050565b6108fa816108e0565b82525050565b5f6020820190506109135f8301846108f1565b92915050565b5f5ffd5b610926816108e0565b8114610930575f5ffd5b50565b5f813590506109418161091d565b92915050565b5f6020828403121561095c5761095b610919565b5b5f61096984828501610933565b91505092915050565b5f82825260208201905092915050565b7f61756374696f6e206e6f742079657420737461727465640000000000000000005f82015250565b5f6109b6601783610972565b91506109c182610982565b602082019050919050565b5f6020820190508181035f8301526109e3816109aa565b9050919050565b7f61756374696f6e206973206f76657200000000000000000000000000000000005f82015250565b5f610a1e600f83610972565b9150610a29826109ea565b602082019050919050565b5f6020820190508181035f830152610a4b81610a12565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a8982610890565b9150610a9483610890565b9250828203905081811115610aac57610aab610a52565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610ae982610890565b9150610af483610890565b925082610b0457610b03610ab2565b5b828204905092915050565b5f610b1982610890565b9150610b2483610890565b9250828202610b3281610890565b91508282048414831517610b4957610b48610a52565b5b5092915050565b7f626964206d757374206265206e6f74206c657373207468616e207468652063755f8201527f7272656e74207072696365000000000000000000000000000000000000000000602082015250565b5f610baa602b83610972565b9150610bb582610b50565b604082019050919050565b5f6020820190508181035f830152610bd781610b9e565b9050919050565b5f604082019050610bf15f8301856108f1565b610bfe6020830184610899565b9392505050565b5f604082019050610c185f830185610899565b610c256020830184610899565b939250505056fea2646970667358221220240062797b261b53923b2f38b113436f1f36111d72c45850ababe288d0c22a5e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B2 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x6B64C769 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9C PUSH2 0x1DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB2 PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xDE PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x506 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x148 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x172 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST PUSH2 0x6BD JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 SLOAD GT PUSH2 0x21E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A4 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x5A PUSH8 0xDE0B6B3A7640000 PUSH8 0x8AC7230489E80000 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 POP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x371 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xDAEC4582D5D9595688C8C98545FDD1C696D41C6AEAEB636737E84ED2F5C00EDA CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x3F2 SWAP3 SWAP2 SWAP1 PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x405 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x40D PUSH2 0x506 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x44F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x45A PUSH2 0x741 JUMP JUMPDEST TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0xF8910119DDBEF5440C54532457DFE8250A10ED39E583292818F44724B9E1344C PUSH8 0x8AC7230489E80000 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP3 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x4F5 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4FE PUSH0 PUSH2 0x7C8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SLOAD GT PUSH2 0x572 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP1 PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP1 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x5A PUSH8 0xDE0B6B3A7640000 PUSH8 0x8AC7230489E80000 PUSH2 0x622 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x62C SWAP2 SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x636 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0xA PUSH1 0x1 SLOAD TIMESTAMP PUSH2 0x646 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH2 0x650 SWAP2 SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x65A SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x68B JUMPI PUSH8 0xDE0B6B3A7640000 SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6C5 PUSH2 0x741 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x735 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x7C8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x749 PUSH2 0x889 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x767 PUSH2 0x506 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C6 JUMPI PUSH2 0x78A PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BD SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A2 DUP2 PUSH2 0x890 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8BB PUSH0 DUP4 ADD DUP5 PUSH2 0x899 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8EA DUP3 PUSH2 0x8C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FA DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x913 PUSH0 DUP4 ADD DUP5 PUSH2 0x8F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x926 DUP2 PUSH2 0x8E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x930 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x941 DUP2 PUSH2 0x91D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0x919 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x969 DUP5 DUP3 DUP6 ADD PUSH2 0x933 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x61756374696F6E206E6F74207965742073746172746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9B6 PUSH1 0x17 DUP4 PUSH2 0x972 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C1 DUP3 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9E3 DUP2 PUSH2 0x9AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x61756374696F6E206973206F7665720000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA1E PUSH1 0xF DUP4 PUSH2 0x972 JUMP JUMPDEST SWAP2 POP PUSH2 0xA29 DUP3 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA4B DUP2 PUSH2 0xA12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA89 DUP3 PUSH2 0x890 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xAAC JUMPI PUSH2 0xAAB PUSH2 0xA52 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAE9 DUP3 PUSH2 0x890 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF4 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB04 JUMPI PUSH2 0xB03 PUSH2 0xAB2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB19 DUP3 PUSH2 0x890 JUMP JUMPDEST SWAP2 POP PUSH2 0xB24 DUP4 PUSH2 0x890 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB32 DUP2 PUSH2 0x890 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB49 JUMPI PUSH2 0xB48 PUSH2 0xA52 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x626964206D757374206265206E6F74206C657373207468616E20746865206375 PUSH0 DUP3 ADD MSTORE PUSH32 0x7272656E74207072696365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBAA PUSH1 0x2B DUP4 PUSH2 0x972 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB5 DUP3 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBD7 DUP2 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBF1 PUSH0 DUP4 ADD DUP6 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0xBFE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x899 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC18 PUSH0 DUP4 ADD DUP6 PUSH2 0x899 JUMP JUMPDEST PUSH2 0xC25 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x899 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 STOP PUSH3 0x797B26 SHL MSTORE8 SWAP3 EXTCODESIZE 0x2F CODESIZE 0xB1 SGT NUMBER PUSH16 0x1F36111D72C45850ABABE288D0C22A5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "117:3077:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1417:943;;;:::i;:::-;;2435:156;;;;;;;;;;;;;:::i;:::-;;1024:366;;;;;;;;;;;;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;548:21:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:554:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;598:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;649:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1417:943:2;1515:1;1503:9;;:13;1495:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1619:1;1601:20;;:6;;;;;;;;;;;:20;;;1593:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1691:17;357:10;293;241:7;187:8;468:23;;;;:::i;:::-;467:36;;;;:::i;:::-;:47;;;;:::i;:::-;357:10;1745:9;;1727:15;:27;;;;:::i;:::-;1726:38;;;;:::i;:::-;:53;;;;:::i;:::-;187:8;1711:69;;;;:::i;:::-;1691:89;;241:7;1796:12;:24;1792:81;;;241:7;1837:24;;1792:81;1955:12;1942:9;:25;;1934:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2097:10;2088:6;;:19;;;;;;;;;;;;;;;;;;2178:9;2165:10;:22;;;;2234:35;2247:10;2259:9;2234:35;;;;;;;:::i;:::-;;;;;;;;1447:913;1417:943::o;2435:156::-;1531:13:0;:11;:13::i;:::-;2543:7:2::1;:5;:7::i;:::-;2535:25;;:48;2561:21;2535:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2435:156::o:0;1024:366::-;1531:13:0;:11;:13::i;:::-;1143:15:2::1;1131:9;:27;;;;1223:1;1206:6;;:19;;;;;;;;;;;;;;;;;;1289:1;1276:10;:14;;;;1343:38;187:8;1371:9;;1343:38;;;;;;;:::i;:::-;;;;;;;;1024:366::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;548:21:2:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2633:554:2:-;2673:4;2747:1;2735:9;;:13;2727:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2851:1;2833:20;;:6;;;;;;;;;;;:20;;;2825:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2923:17;357:10;293;241:7;187:8;468:23;;;;:::i;:::-;467:36;;;;:::i;:::-;:47;;;;:::i;:::-;357:10;2977:9;;2959:15;:27;;;;:::i;:::-;2958:38;;;;:::i;:::-;:53;;;;:::i;:::-;187:8;2943:69;;;;:::i;:::-;2923:89;;241:7;3027:12;:24;3023:81;;;241:7;3068:24;;3023:81;3167:12;3160:19;;;2633:554;:::o;598:22::-;;;;:::o;649:21::-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:77:3:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:329::-;1687:6;1736:2;1724:9;1715:7;1711:23;1707:32;1704:119;;;1742:79;;:::i;:::-;1704:119;1862:1;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1833:117;1628:329;;;;:::o;1963:169::-;2047:11;2081:6;2076:3;2069:19;2121:4;2116:3;2112:14;2097:29;;1963:169;;;;:::o;2138:173::-;2278:25;2274:1;2266:6;2262:14;2255:49;2138:173;:::o;2317:366::-;2459:3;2480:67;2544:2;2539:3;2480:67;:::i;:::-;2473:74;;2556:93;2645:3;2556:93;:::i;:::-;2674:2;2669:3;2665:12;2658:19;;2317:366;;;:::o;2689:419::-;2855:4;2893:2;2882:9;2878:18;2870:26;;2942:9;2936:4;2932:20;2928:1;2917:9;2913:17;2906:47;2970:131;3096:4;2970:131;:::i;:::-;2962:139;;2689:419;;;:::o;3114:165::-;3254:17;3250:1;3242:6;3238:14;3231:41;3114:165;:::o;3285:366::-;3427:3;3448:67;3512:2;3507:3;3448:67;:::i;:::-;3441:74;;3524:93;3613:3;3524:93;:::i;:::-;3642:2;3637:3;3633:12;3626:19;;3285:366;;;:::o;3657:419::-;3823:4;3861:2;3850:9;3846:18;3838:26;;3910:9;3904:4;3900:20;3896:1;3885:9;3881:17;3874:47;3938:131;4064:4;3938:131;:::i;:::-;3930:139;;3657:419;;;:::o;4082:180::-;4130:77;4127:1;4120:88;4227:4;4224:1;4217:15;4251:4;4248:1;4241:15;4268:194;4308:4;4328:20;4346:1;4328:20;:::i;:::-;4323:25;;4362:20;4380:1;4362:20;:::i;:::-;4357:25;;4406:1;4403;4399:9;4391:17;;4430:1;4424:4;4421:11;4418:37;;;4435:18;;:::i;:::-;4418:37;4268:194;;;;:::o;4468:180::-;4516:77;4513:1;4506:88;4613:4;4610:1;4603:15;4637:4;4634:1;4627:15;4654:185;4694:1;4711:20;4729:1;4711:20;:::i;:::-;4706:25;;4745:20;4763:1;4745:20;:::i;:::-;4740:25;;4784:1;4774:35;;4789:18;;:::i;:::-;4774:35;4831:1;4828;4824:9;4819:14;;4654:185;;;;:::o;4845:410::-;4885:7;4908:20;4926:1;4908:20;:::i;:::-;4903:25;;4942:20;4960:1;4942:20;:::i;:::-;4937:25;;4997:1;4994;4990:9;5019:30;5037:11;5019:30;:::i;:::-;5008:41;;5198:1;5189:7;5185:15;5182:1;5179:22;5159:1;5152:9;5132:83;5109:139;;5228:18;;:::i;:::-;5109:139;4893:362;4845:410;;;;:::o;5261:230::-;5401:34;5397:1;5389:6;5385:14;5378:58;5470:13;5465:2;5457:6;5453:15;5446:38;5261:230;:::o;5497:366::-;5639:3;5660:67;5724:2;5719:3;5660:67;:::i;:::-;5653:74;;5736:93;5825:3;5736:93;:::i;:::-;5854:2;5849:3;5845:12;5838:19;;5497:366;;;:::o;5869:419::-;6035:4;6073:2;6062:9;6058:18;6050:26;;6122:9;6116:4;6112:20;6108:1;6097:9;6093:17;6086:47;6150:131;6276:4;6150:131;:::i;:::-;6142:139;;5869:419;;;:::o;6294:332::-;6415:4;6453:2;6442:9;6438:18;6430:26;;6466:71;6534:1;6523:9;6519:17;6510:6;6466:71;:::i;:::-;6547:72;6615:2;6604:9;6600:18;6591:6;6547:72;:::i;:::-;6294:332;;;;;:::o;6632:::-;6753:4;6791:2;6780:9;6776:18;6768:26;;6804:71;6872:1;6861:9;6857:17;6848:6;6804:71;:::i;:::-;6885:72;6953:2;6942:9;6938:18;6929:6;6885:72;:::i;:::-;6632:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "634000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bid()": "infinite",
								"claim()": "infinite",
								"getPrice()": "infinite",
								"highestBid()": "2469",
								"owner()": "2514",
								"renounceOwnership()": "infinite",
								"startAuction()": "infinite",
								"startTime()": "2514",
								"transferOwnership(address)": "infinite",
								"winner()": "2574"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 3194,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 923,
									"end": 965,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 923,
									"end": 965,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 923,
									"end": 965,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 923,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 923,
									"end": 965,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 923,
									"end": 965,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 923,
									"end": 965,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 923,
									"end": 965,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 923,
									"end": 965,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 923,
									"end": 965,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 923,
									"end": 965,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 945,
									"end": 955,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3194,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220240062797b261b53923b2f38b113436f1f36111d72c45850ababe288d0c22a5e64736f6c634300081c0033",
									".code": [
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "98D5FDCA"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "D57BDE79"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "DFBF53AE"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "1998AEEF"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "4E71D92D"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "6B64C769"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "78E97925"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 3194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 2360,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1417,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1417,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 2360,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1417,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 2360,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2435,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 548,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 548,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2633,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2633,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 598,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 649,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 649,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 2360,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1417,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1516,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1495,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1495,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1621,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1601,
											"end": 1621,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1621,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1593,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1593,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 293,
											"end": 303,
											"name": "PUSH",
											"source": 2,
											"value": "5A"
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 187,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 468,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 468,
											"end": 491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 468,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 468,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 468,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 467,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 467,
											"end": 503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 467,
											"end": 503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 467,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 467,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 467,
											"end": 503,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 467,
											"end": 503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 467,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 467,
											"end": 514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 467,
											"end": 514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 467,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 467,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 467,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 467,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1742,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1727,
											"end": 1754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1727,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1727,
											"end": 1754,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1727,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1726,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1726,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1726,
											"end": 1779,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1726,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1779,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1726,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 187,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1711,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1711,
											"end": 1780,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1711,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1780,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1711,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1796,
											"end": 1808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1820,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1873,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1792,
											"end": 1873,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1792,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1951,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1967,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1967,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1934,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1934,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2107,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2187,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2175,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2165,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2187,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "PUSH",
											"source": 2,
											"value": "DAEC4582D5D9595688C8C98545FDD1C696D41C6AEAEB636737E84ED2F5C00EDA"
										},
										{
											"begin": 2247,
											"end": 2257,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2268,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2234,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2269,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 2360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2435,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 2561,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1158,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1131,
											"end": 1158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1158,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1158,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1206,
											"end": 1212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1276,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "F8910119DDBEF5440C54532457DFE8250A10ED39E583292818F44724B9E1344C"
										},
										{
											"begin": 187,
											"end": 195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1371,
											"end": 1380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1371,
											"end": 1380,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1343,
											"end": 1381,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1381,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1024,
											"end": 1390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 548,
											"end": 569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2677,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2748,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2727,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2727,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2833,
											"end": 2853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2833,
											"end": 2853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2853,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2825,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 2940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 293,
											"end": 303,
											"name": "PUSH",
											"source": 2,
											"value": "5A"
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 187,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 468,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 468,
											"end": 491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 468,
											"end": 491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 468,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 491,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 468,
											"end": 491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 467,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 467,
											"end": 503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 467,
											"end": 503,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 467,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 467,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 467,
											"end": 503,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 467,
											"end": 503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 467,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 467,
											"end": 514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 467,
											"end": 514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 467,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 467,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 467,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 467,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 357,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2977,
											"end": 2986,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2977,
											"end": 2986,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2959,
											"end": 2986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2959,
											"end": 2986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2959,
											"end": 2986,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2959,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2958,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2958,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2958,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2958,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 187,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 2943,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2943,
											"end": 3012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2943,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2943,
											"end": 3012,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2943,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2923,
											"end": 3012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3051,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3104,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3023,
											"end": 3104,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3068,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3104,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3023,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3167,
											"end": 3179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3160,
											"end": 3179,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 3187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 598,
											"end": 620,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 598,
											"end": 620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 649,
											"end": 670,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 649,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1734,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1707,
											"end": 1739,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1742,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 1742,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 1704,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1921,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1887,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1887,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1877,
											"end": 1940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2047,
											"end": 2058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2069,
											"end": 2088,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2112,
											"end": 2126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2097,
											"end": 2126,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2311,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2138,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2278,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "61756374696F6E206E6F74207965742073746172746564000000000000000000"
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2276,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2544,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2480,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2547,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2480,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2473,
											"end": 2547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2645,
											"end": 2648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2556,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2649,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2556,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2665,
											"end": 2677,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 2951,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 2940,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2952,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2926,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3096,
											"end": 3100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2970,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2970,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2689,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3279,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3114,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3271,
											"name": "PUSH",
											"source": 3,
											"value": "61756374696F6E206973206F7665720000000000000000000000000000000000"
										},
										{
											"begin": 3250,
											"end": 3251,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3252,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3231,
											"end": 3272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3285,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3448,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 3507,
											"end": 3510,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3448,
											"end": 3515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3515,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3448,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3441,
											"end": 3515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3441,
											"end": 3515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3613,
											"end": 3616,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3524,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3524,
											"end": 3617,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3524,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 3644,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3640,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3645,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 4076,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3657,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3827,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3863,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3850,
											"end": 3859,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3864,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3904,
											"end": 3908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3900,
											"end": 3920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3874,
											"end": 3921,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3938,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4064,
											"end": 4068,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3938,
											"end": 4069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3938,
											"end": 4069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3938,
											"end": 4069,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3938,
											"end": 4069,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3930,
											"end": 4069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3930,
											"end": 4069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 4076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 4076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 4076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 4076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4262,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4082,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4207,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4127,
											"end": 4128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4227,
											"end": 4231,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4224,
											"end": 4225,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4217,
											"end": 4232,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4256,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4462,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4268,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4308,
											"end": 4312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4328,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4328,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4328,
											"end": 4348,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4328,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4348,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4323,
											"end": 4348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4380,
											"end": 4381,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4362,
											"end": 4382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4382,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4362,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4357,
											"end": 4382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4406,
											"end": 4407,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4408,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 4408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 4408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4432,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4455,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4418,
											"end": 4455,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4435,
											"end": 4453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4455,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4418,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4462,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4462,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4462,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4462,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4648,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4468,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4516,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4617,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4603,
											"end": 4618,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4641,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4634,
											"end": 4635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4839,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4654,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4694,
											"end": 4695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4729,
											"end": 4730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4711,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4731,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4711,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4706,
											"end": 4731,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4706,
											"end": 4731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4745,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4745,
											"end": 4765,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4745,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4765,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4774,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4774,
											"end": 4809,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4789,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4789,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4807,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4789,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4774,
											"end": 4809,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4774,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4831,
											"end": 4832,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4824,
											"end": 4833,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 4833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4819,
											"end": 4833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4839,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4839,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4845,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4908,
											"end": 4928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 4908,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4928,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4942,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4960,
											"end": 4961,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4942,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4942,
											"end": 4962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4942,
											"end": 4962,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 4942,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4937,
											"end": 4962,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4937,
											"end": 4962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4997,
											"end": 4998,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 4995,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5019,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5037,
											"end": 5048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5019,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5019,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5019,
											"end": 5049,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5019,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5008,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5198,
											"end": 5199,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5189,
											"end": 5196,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5185,
											"end": 5200,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5183,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5179,
											"end": 5201,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5152,
											"end": 5161,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5132,
											"end": 5215,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5109,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5109,
											"end": 5248,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5228,
											"end": 5246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5109,
											"end": 5248,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5109,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 5255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 5255,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 5255,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 5255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 5255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 5255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5401,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "626964206D757374206265206E6F74206C657373207468616E20746865206375"
										},
										{
											"begin": 5397,
											"end": 5398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5395,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5385,
											"end": 5399,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5470,
											"end": 5483,
											"name": "PUSH",
											"source": 3,
											"value": "7272656E74207072696365000000000000000000000000000000000000000000"
										},
										{
											"begin": 5465,
											"end": 5467,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5468,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5446,
											"end": 5484,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5863,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5497,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "PUSH",
											"source": 3,
											"value": "2B"
										},
										{
											"begin": 5719,
											"end": 5722,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5660,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5660,
											"end": 5727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5660,
											"end": 5727,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5660,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5653,
											"end": 5727,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5653,
											"end": 5727,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5825,
											"end": 5828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5736,
											"end": 5829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5736,
											"end": 5829,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5736,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5849,
											"end": 5852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5845,
											"end": 5857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5838,
											"end": 5857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5838,
											"end": 5857,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5497,
											"end": 5863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 6288,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 5869,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6122,
											"end": 6131,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6112,
											"end": 6132,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6106,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6110,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6150,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6276,
											"end": 6280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6150,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 6150,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6150,
											"end": 6281,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6150,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6142,
											"end": 6281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6142,
											"end": 6281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 6288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 6288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 6288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 6288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6626,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 6294,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6442,
											"end": 6451,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6466,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6534,
											"end": 6535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6523,
											"end": 6532,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6519,
											"end": 6536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6510,
											"end": 6516,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6466,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6466,
											"end": 6537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6466,
											"end": 6537,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6466,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 6613,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6597,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6547,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6619,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6547,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6626,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6294,
											"end": 6626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6964,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6632,
											"end": 6964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6793,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6768,
											"end": 6794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6804,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6872,
											"end": 6873,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6870,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6857,
											"end": 6874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6848,
											"end": 6854,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6804,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6804,
											"end": 6875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6804,
											"end": 6875,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6804,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6885,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6953,
											"end": 6955,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6938,
											"end": 6956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6885,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6885,
											"end": 6957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6885,
											"end": 6957,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6885,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6964,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6964,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6964,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6632,
											"end": 6964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/DutchAuction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bid()": "1998aeef",
							"claim()": "4e71d92d",
							"getPrice()": "98d5fdca",
							"highestBid()": "d57bde79",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"startAuction()": "6b64c769",
							"startTime()": "78e97925",
							"transferOwnership(address)": "f2fde38b",
							"winner()": "dfbf53ae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningBid\",\"type\":\"uint256\"}],\"name\":\"AuctionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"AuctionStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DutchAuction.sol\":\"DutchAuction\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DutchAuction.sol\":{\"keccak256\":\"0x7de1c0208e5acebce6bb940c1f6b276c6236d695d34b580eaee9d24ce234d2e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://664649593d37628ff1b4532d3fd251d497f6998648d39c82c42da57e338f7a6b\",\"dweb:/ipfs/QmWkTPqHb3jg5DReuBJbPPe3ABLPR4A266gUv65a3cgLR4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/DutchAuction.sol:DutchAuction",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 206,
								"contract": "contracts/DutchAuction.sol:DutchAuction",
								"label": "startTime",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 208,
								"contract": "contracts/DutchAuction.sol:DutchAuction",
								"label": "highestBid",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 210,
								"contract": "contracts/DutchAuction.sol:DutchAuction",
								"label": "winner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/DutchAuction.sol": {
				"ast": {
					"absolutePath": "contracts/DutchAuction.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"DutchAuction": [
							396
						],
						"Ownable": [
							147
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 397,
							"sourceUnit": 148,
							"src": "61:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 181,
										"name": "Ownable",
										"nameLocations": [
											"142:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "142:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "142:7:2"
								}
							],
							"canonicalName": "DutchAuction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396,
								147,
								177
							],
							"name": "DutchAuction",
							"nameLocation": "126:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 185,
									"mutability": "constant",
									"name": "START_PRICE",
									"nameLocation": "173:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "159:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 183,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "159:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "187:8:2",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 188,
									"mutability": "constant",
									"name": "END_PRICE",
									"nameLocation": "229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "215:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 186,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "215:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "241:7:2",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 191,
									"mutability": "constant",
									"name": "DURATION",
									"nameLocation": "282:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "268:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 189,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "268:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3930",
										"id": 190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "293:10:2",
										"subdenomination": "seconds",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_90_by_1",
											"typeString": "int_const 90"
										},
										"value": "90"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 194,
									"mutability": "constant",
									"name": "INTERNAL",
									"nameLocation": "346:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "332:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 192,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "332:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "357:10:2",
										"subdenomination": "seconds",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 204,
									"mutability": "constant",
									"name": "DEC_PER_STEP",
									"nameLocation": "452:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "438:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 195,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "438:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 201,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 196,
															"name": "START_PRICE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "468:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 197,
															"name": "END_PRICE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "482:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "468:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 199,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "467:25:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "/",
											"rightExpression": {
												"id": 200,
												"name": "DURATION",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 191,
												"src": "495:8:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "467:36:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 202,
											"name": "INTERNAL",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 194,
											"src": "506:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "467:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 206,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "560:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "548:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 205,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "548:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d57bde79",
									"id": 208,
									"mutability": "mutable",
									"name": "highestBid",
									"nameLocation": "610:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "598:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 207,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "598:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dfbf53ae",
									"id": 210,
									"mutability": "mutable",
									"name": "winner",
									"nameLocation": "664:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "649:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 209,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "649:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f8910119ddbef5440c54532457dfe8250a10ed39e583292818f44724b9e1344c",
									"id": 216,
									"name": "AuctionStarted",
									"nameLocation": "737:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "startPrice",
												"nameLocation": "757:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "752:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "752:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "774:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "769:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "769:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:33:2"
									},
									"src": "731:54:2"
								},
								{
									"anonymous": false,
									"eventSelector": "daec4582d5d9595688c8c98545fdd1c696d41c6aeaeb636737e84ed2f5c00eda",
									"id": 222,
									"name": "AuctionEnded",
									"nameLocation": "824:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": false,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "845:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "837:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "winningBid",
												"nameLocation": "858:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "853:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:33:2"
									},
									"src": "818:52:2"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "957:8:2",
										"statements": []
									},
									"id": 230,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 225,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "945:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "949:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "945:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 227,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 224,
												"name": "Ownable",
												"nameLocations": [
													"937:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "937:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "937:19:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "957:0:2"
									},
									"scope": 396,
									"src": "923:42:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "1065:325:2",
										"statements": [
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 235,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "1131:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 236,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1143:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1149:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1143:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1131:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1131:27:2"
											},
											{
												"expression": {
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 240,
														"name": "winner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "1206:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1223:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1215:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 241,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1215:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1215:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1206:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "1206:19:2"
											},
											{
												"expression": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 247,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1276:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1289:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1276:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1276:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 252,
															"name": "START_PRICE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1358:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 253,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "1371:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"name": "AuctionStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1343:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "EmitStatement",
												"src": "1338:43:2"
											}
										]
									},
									"functionSelector": "6b64c769",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 233,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 232,
												"name": "onlyOwner",
												"nameLocations": [
													"1055:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1055:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1055:9:2"
										}
									],
									"name": "startAuction",
									"nameLocation": "1033:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1045:2:2"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1065:0:2"
									},
									"scope": 396,
									"src": "1024:366:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1447:913:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 261,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1503:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1515:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1503:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61756374696f6e206e6f74207965742073746172746564",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1518:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94",
																"typeString": "literal_string \"auction not yet started\""
															},
															"value": "auction not yet started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94",
																"typeString": "literal_string \"auction not yet started\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1495:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "1495:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "winner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "1601:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1619:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1611:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 269,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1611:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1611:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1601:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61756374696f6e206973206f766572",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1623:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b",
																"typeString": "literal_string \"auction is over\""
															},
															"value": "auction is over"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b",
																"typeString": "literal_string \"auction is over\""
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1593:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "1593:48:2"
											},
											{
												"assignments": [
													278
												],
												"declarations": [
													{
														"constant": false,
														"id": 278,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "1696:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 326,
														"src": "1691:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 277,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1691:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 279,
														"name": "START_PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "1711:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 283,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 280,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "1727:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 281,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1733:9:2",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "1727:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 282,
																					"name": "startTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 206,
																					"src": "1745:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1727:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 284,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1726:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 285,
																		"name": "INTERNAL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "1756:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1726:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 287,
																	"name": "DEC_PER_STEP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "1767:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1726:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 289,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1725:55:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1711:69:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1691:89:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 292,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "1796:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 293,
														"name": "END_PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1811:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1796:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "1792:81:2",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "1822:51:2",
													"statements": [
														{
															"expression": {
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 295,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "1837:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 296,
																	"name": "END_PRICE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "1852:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1837:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"nodeType": "ExpressionStatement",
															"src": "1837:24:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 302,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1942:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1946:5:2",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1942:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 304,
																"name": "currentPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1955:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1942:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626964206d757374206265206e6f74206c657373207468616e207468652063757272656e74207072696365",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1983:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e",
																"typeString": "literal_string \"bid must be not less than the current price\""
															},
															"value": "bid must be not less than the current price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93c8c98398769282ef39b3ee8279ae6de3420e03616cb8bebf19570d7b4d7a3e",
																"typeString": "literal_string \"bid must be not less than the current price\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1934:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1934:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "1934:95:2"
											},
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 309,
														"name": "winner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "2088:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 310,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2097:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2101:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2097:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2088:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "2088:19:2"
											},
											{
												"expression": {
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 314,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2165:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 315,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2178:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2182:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2178:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2165:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "2165:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 320,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2247:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2251:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2247:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 322,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2259:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2263:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2259:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "AuctionEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2234:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "EmitStatement",
												"src": "2229:40:2"
											}
										]
									},
									"functionSelector": "1998aeef",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bid",
									"nameLocation": "1426:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1429:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1447:0:2"
									},
									"scope": 396,
									"src": "1417:943:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "2469:122:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 340,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2569:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DutchAuction_$396",
																			"typeString": "contract DutchAuction"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DutchAuction_$396",
																			"typeString": "contract DutchAuction"
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2561:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 338,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2561:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2561:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2575:7:2",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2561:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 334,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2543:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2543:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2535:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2535:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2535:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2552:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2535:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2535:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2535:48:2"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 330,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 329,
												"name": "onlyOwner",
												"nameLocations": [
													"2459:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2459:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2459:9:2"
										}
									],
									"name": "claim",
									"nameLocation": "2444:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2449:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2469:0:2"
									},
									"scope": 396,
									"src": "2435:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "2679:508:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 352,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "2735:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2747:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2735:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61756374696f6e206e6f74207965742073746172746564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2750:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94",
																"typeString": "literal_string \"auction not yet started\""
															},
															"value": "auction not yet started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7a7779be93951a36048acb4abe62b0b0944274d38d426e9b80588936ee53c94",
																"typeString": "literal_string \"auction not yet started\""
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2727:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2727:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2727:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 359,
																"name": "winner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "2833:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2851:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2843:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 360,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2843:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2843:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2833:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61756374696f6e206973206f766572",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2855:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b",
																"typeString": "literal_string \"auction is over\""
															},
															"value": "auction is over"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0d0b3f63c5cc1973c44fb9722c6e8ae8864e6b5eb25be345d74f2013ee1372b",
																"typeString": "literal_string \"auction is over\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2825:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2825:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2825:48:2"
											},
											{
												"assignments": [
													369
												],
												"declarations": [
													{
														"constant": false,
														"id": 369,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "2928:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "2923:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 368,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2923:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 370,
														"name": "START_PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "2943:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 371,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "2959:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 372,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2965:9:2",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "2959:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 373,
																					"name": "startTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 206,
																					"src": "2977:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2959:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 375,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2958:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 376,
																		"name": "INTERNAL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "2988:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2958:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 378,
																	"name": "DEC_PER_STEP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "2999:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2958:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 380,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2957:55:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2943:69:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2923:89:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 383,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "3027:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 384,
														"name": "END_PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "3042:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3027:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "IfStatement",
												"src": "3023:81:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "3053:51:2",
													"statements": [
														{
															"expression": {
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 386,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "3068:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 387,
																	"name": "END_PRICE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "3083:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3068:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "3068:24:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 392,
													"name": "currentPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 369,
													"src": "3167:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 350,
												"id": 393,
												"nodeType": "Return",
												"src": "3160:19:2"
											}
										]
									},
									"functionSelector": "98d5fdca",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "2642:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2650:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2673:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2673:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:6:2"
									},
									"scope": 396,
									"src": "2633:554:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 397,
							"src": "117:3077:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								216,
								222
							]
						}
					],
					"src": "33:3161:2"
				},
				"id": 2
			}
		}
	}
}